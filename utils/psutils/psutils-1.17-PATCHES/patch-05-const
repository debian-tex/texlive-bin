diff -ur psutils-1.17.orig/pserror.c psutils-1.17/pserror.c
--- psutils-1.17.orig/pserror.c	2008-02-01 12:23:16.000000000 +0100
+++ psutils-1.17/pserror.c	2009-09-01 13:40:27.000000000 +0200
@@ -21,7 +21,7 @@
 #define MAX_FORMAT	16	/* maximum format length */
 #define MAX_COLUMN	78	/* maximum column to print upto */
 
-void message(int flags, char *format, ...)
+void message(int flags, const char *format, ...)
 {
   va_list args ;
   static int column = 0 ;	/* current screen column for message wrap */
diff -ur psutils-1.17.orig/pserror.h psutils-1.17/pserror.h
--- psutils-1.17.orig/pserror.h	1997-03-11 23:53:02.000000000 +0100
+++ psutils-1.17/pserror.h	2009-08-22 22:53:17.000000000 +0200
@@ -17,4 +17,4 @@
 #define WARN		(MESSAGE_NL|MESSAGE_PROGRAM)
 #define LOG		0
 
-extern void message(int flags, char *format, ...) ;
+extern void message(int flags, const char *format, ...) ;
diff -ur psutils-1.17.orig/psspec.c psutils-1.17/psspec.c
--- psutils-1.17.orig/psspec.c	1997-03-11 23:53:04.000000000 +0100
+++ psutils-1.17/psspec.c	2009-08-27 14:47:26.000000000 +0200
@@ -91,7 +91,7 @@
    return (num);
 }
 
-static char *prologue[] = { /* PStoPS procset */
+static const char *prologue[] = { /* PStoPS procset */
 #ifndef SHOWPAGE_LOAD
    "userdict begin",
    "[/showpage/erasepage/copypage]{dup where{pop dup load",	/* prevent */
@@ -138,7 +138,7 @@
 {
    int thispg, maxpage;
    int pageindex = 0;
-   char **pro;
+   const char **pro;
 
    scanpages();
 
@@ -214,7 +214,6 @@
 	    }
 	    writestring("userdict/PStoPSmatrix matrix currentmatrix put\n");
 	    if (width > 0 && height > 0) {
-	       char buffer[BUFSIZ];
 	       writestring("userdict/PStoPSclip{0 0 moveto\n");
 	       sprintf(buffer, " %f 0 rlineto 0 %f rlineto -%f 0 rlineto\n",
 		       width, height, width);
diff -ur psutils-1.17.orig/psutil.c psutils-1.17/psutil.c
--- psutils-1.17.orig/psutil.c	2006-01-17 22:16:42.000000000 +0100
+++ psutils-1.17/psutil.c	2009-09-01 13:43:52.000000000 +0200
@@ -65,7 +65,7 @@
 };
 
 /* return pointer to paper size struct or NULL */
-Paper* findpaper(char *name)
+Paper* findpaper(const char *name)
 {
    Paper *pp;
    for (pp = papersizes; PaperName(pp); pp++) {
@@ -233,14 +233,14 @@
 
 /* Output routines. These all update the global variable bytes with the number
  * of bytes written */
-void writestring(char *s)
+void writestring(const char *s)
 {
    fputs(s, outfile);
    bytes += strlen(s);
 }
 
 /* write page comment */
-void writepageheader(char *label, int page)
+void writepageheader(const char *label, int page)
 {
    if (verbose)
       message(LOG, "[%d] ", page);
diff -ur psutils-1.17.orig/psutil.h psutils-1.17/psutil.h
--- psutils-1.17.orig/psutil.h	1997-03-11 23:53:04.000000000 +0100
+++ psutils-1.17/psutil.h	2009-08-22 22:55:59.000000000 +0200
@@ -17,7 +17,7 @@
 /* paper size structure; configurability and proper paper resources will have
    to wait until version 2 */
 typedef struct papersize {
-   char *name;		/* name of paper size */
+   const char *name;		/* name of paper size */
    int width, height;	/* width, height in points */
 } Paper ;
 #define PaperName(p) ((p)->name)
@@ -25,11 +25,11 @@
 #define PaperHeight(p) ((p)->height)
 
 /* Definitions for functions found in psutil.c */
-extern Paper *findpaper(char *name);
+extern Paper *findpaper(const char *name);
 extern FILE *seekable(FILE *fp);
 extern void writepage(int p);
 extern void seekpage(int p);
-extern void writepageheader(char *label, int p);
+extern void writepageheader(const char *label, int p);
 extern void writepagesetup(void);
 extern void writepagebody(int p);
 extern void writeheader(int p);
@@ -39,7 +39,7 @@
 extern void writetrailer(void);
 extern void writeemptypage(void);
 extern void scanpages(void);
-extern void writestring(char *s);
+extern void writestring(const char *s);
 
 /* These variables are imported from the client program (e.g. psbook, psnup,
    etc.) */
