#!/usr/bin/env ruby
# encoding: utf-8

 MYNAME = File.basename($0)
Version = '1.41'

<<'DOC'
= match_parens - find mismatches of parentheses, braces, (angle) brackets, in texts

= Synopsis
match_parens [filename]	

= Description
Mismatches of parentheses, braces, (angle) brackets, especially in TeX
sources which may be rich in those, may be difficult to trace. This little
script helps you by writing your text to standard output, after adding a
left margin to your text, which will normally be almost empty, but will
clearly show any mismatches. (Just try me on myself to see that the
parenthesis starting this sentence will not appear to be matched at the end
of the file. If you look at me in the vim editor, then select this
paragraph and try the command |:!%|.

The exit value of the script is 0 when there are no mismatches, 1 otherwise.

Angle brackets are only looked for inside HTML text, where HTML is
supposed to start with |<html>| or |=begin rdoc| and to end with
|</html>| or |=end|.

= Examples
Suppose we have two files, |good| and |bad|, containing these texts:
	good:				bad:
	This is a (simple) test 	This is a (simple test
	without mismatches		containing mismatches

then here are some usage examples. First a simple test on these files:
	$ match_parens good
	      1 	This is a (simple) test
	      2 	without mismatches
	$ echo $?
	0
	$ match_parens bad
	      1 (	This is a (simple test
	      2 (	containing mismatches
	$ echo $?
	1

Just report if there are mismatches: 
	$ match_parens good >/dev/null && echo fine || echo problems
	fine
	$ match_parens bad >/dev/null && echo fine || echo problems
	problems

Report all tex files with mismatches in the current directory:
	$ for i in *.tex; do match_parens $i >/dev/null || echo $i; done

Matches must be in correct order:
	$ echo -e "This is a ([simple)] test\n" | match_parens
	      1 ([)]	This is a ([simple)] test
	      2 ([)]	
= Bugs
Conversion of ``...'' to “...” should only be done in latex files

= See also
matchparens: the Bash version, which is 10+ times slower

= Changes
Changes with respect to version 1.4:
- clearer output
- added --help and --version options
- documentation adapted to gendoc

= Author and copyright
Author	Wybo Dekker
Email	U{Wybo@dekkerdocumenten.nl}{wybo@dekkerdocumenten.nl}
License	Released under the U{www.gnu.org/copyleft/gpl.html}{GNU General Public License}
DOC

require 'optparse'

ARGV.options do |opt|
  opt.banner = "#{MYNAME} - find mismatches of parentheses, braces, (angle) brackets, in texts\n"
  opt.on('-V','--version',
    'print version and exit') do
      puts Version
      exit
    end
  opt.on('-h','--help',
    'print this help and exit') do
      puts opt.to_s.sub(/^ *-I\n/,'')
      exit
    end
  opt.on('-I') do system("instscript -zp #{MYNAME}"); exit; end
  opt.parse!
end
      s=''
      n=0
   html=false
 parens='{}[]()“”'

arg = ARGV[0] || ''
unless arg.empty?
  test(?e,arg) or raise("file #{arg} does not exist")
  test(?r,arg) or raise("file #{arg} is not readable")
end
while x = gets()
  x = x.gsub(/``/,'“').gsub(/''/,'”')

  if html && (x=~/^([# ]*=end)/ || x=~/<\/html>/i)
         html = false
         parens = '{}[]()'
  elsif !html && (x=~/^([# ]*=begin rdoc)/ || x=~/<html>/i)
         html = true
         parens = '{}[]()“”<>'
  end   

  # remove {x} where x in []{}()<>, copy all parens to s
  s << x.gsub(/“\{[\[\]{}()<>]\}”/,'').tr('^'+parens,'')
  # remove matches from inside
  while s.gsub!(/\{\}|\(\)|\[\]|<>|“”/,'') do end
  puts "%4d | %-10s | %s" % [n+=1,s.slice(0..9),x]
end
exit s.empty? ? 0 : 1
