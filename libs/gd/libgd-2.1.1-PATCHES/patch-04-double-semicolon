diff -ur libgd-2.1.1.orig/src/gd.c libgd-2.1.1/src/gd.c
--- libgd-2.1.1.orig/src/gd.c	2015-01-06 10:16:03.000000000 +0100
+++ libgd-2.1.1/src/gd.c	2015-01-15 08:43:16.599168819 +0100
@@ -2060,7 +2060,7 @@
 	int alphablending_bak;
 
 	/* stack of filled segments */
-	/* struct seg stack[FILL_MAX],*sp = stack;; */
+	/* struct seg stack[FILL_MAX],*sp = stack; */
 	struct seg *stack;
 	struct seg *sp;
 
@@ -3631,7 +3631,7 @@
 			for (x = 0; x < sx; x++) {
 				const unsigned char c = *(src_row + x);
 				if (c == src->transparent) {
-					*(dst_row + x) = gdTrueColorAlpha(0, 0, 0, 127);;
+					*(dst_row + x) = gdTrueColorAlpha(0, 0, 0, 127);
 				} else {
 					*(dst_row + x) = gdTrueColorAlpha(src->red[c], src->green[c], src->blue[c], src->alpha[c]);
 				}
diff -ur libgd-2.1.1.orig/src/gd_interpolation.c libgd-2.1.1/src/gd_interpolation.c
--- libgd-2.1.1.orig/src/gd_interpolation.c	2015-01-06 10:16:03.000000000 +0100
+++ libgd-2.1.1/src/gd_interpolation.c	2015-01-15 08:43:16.599168819 +0100
@@ -1047,7 +1047,7 @@
 {
     const unsigned int src_width = src->sx;
     const unsigned int src_height = src->sy;
-	gdImagePtr tmp_im = NULL;;
+	gdImagePtr tmp_im = NULL;
 	gdImagePtr dst = NULL;
 
     /* First, handle the trivial case. */
diff -ur libgd-2.1.1.orig/src/gd_matrix.c libgd-2.1.1/src/gd_matrix.c
--- libgd-2.1.1.orig/src/gd_matrix.c	2015-01-06 10:16:03.000000000 +0100
+++ libgd-2.1.1/src/gd_matrix.c	2015-01-15 08:43:16.599168819 +0100
@@ -248,7 +248,7 @@
 BGD_DECLARE(int) gdAffineShearVertical(double dst[6], const double angle)
 {
 	dst[0] = 1;
-	dst[1] = tan(angle * M_PI / 180.0);;
+	dst[1] = tan(angle * M_PI / 180.0);
 	dst[2] = 0;
 	dst[3] = 1;
 	dst[4] = 0;
