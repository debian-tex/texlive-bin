.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.04)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xindy 1"
.TH xindy 1 "2010-05-10" "Version 1.16" "xindy"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xindy \- create sorted and tagged index from raw index
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\& xindy [\-V?h] [\-qv] [\-d magic] [\-o outfile.ind] [\-t log] \e
\&       [\-L lang] [\-C codepage] [\-M module] [\-I input] \e
\&       [\-\-interactive] [\-\-mem\-file=xindy.mem] \e
\&       [idx0 idx1 ...]
.Ve
.Sh "GNU-Style Long Options for Short Options:"
.IX Subsection "GNU-Style Long Options for Short Options:"
.Vb 11
\& \-V / \-\-version
\& \-? / \-h / \-\-help
\& \-q / \-\-quiet
\& \-v / \-\-verbose
\& \-d / \-\-debug          (multiple times)
\& \-o / \-\-out\-file
\& \-t / \-\-log\-file
\& \-L / \-\-language
\& \-C / \-\-codepage
\& \-M / \-\-module         (multiple times)
\& \-I / \-\-input\-markup   (supported: latex, omega, xindy)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBxindy\fR is the formatter-indepedent command of xindy, the flexible
indexing system. It takes a raw index as input, and produces a merged,
sorted and tagged index. Merging, sorting, and tagging is controlled
by xindy style files.
.PP
Files with the raw index are passed as arguments. If no arguments are
passed, the raw index will be read from standard input.
.PP
\&\fBxindy\fR is completely described in its manual that you will find on
its Web Site, http://www.xindy.org/. A good introductionary
description appears in the indexing chapter of the LaTeX Companion (2nd ed.)
.PP
If you want to produce an index for LaTeX documents, the command
\&\fItexindy\fR\|(1) is probably more of interest for you. It is a wrapper for
\&\fBxindy\fR that turns on many LaTeX conventions by default.
.SH "OPTIONS"
.IX Header "OPTIONS"
.ie n .IP """\-\-version""\fR / \fB\-V" 4
.el .IP "\f(CW\-\-version\fR / \fB\-V\fR" 4
.IX Item "--version / -V"
output version numbers of all relevant components and exit.
.ie n .IP """\-\-help""\fR / \fB\-h\fR / \fB\-?" 4
.el .IP "\f(CW\-\-help\fR / \fB\-h\fR / \fB\-?\fR" 4
.IX Item "--help / -h / -?"
output usage message with options explanation.
.ie n .IP """\-\-quiet""\fR / \fB\-q" 4
.el .IP "\f(CW\-\-quiet\fR / \fB\-q\fR" 4
.IX Item "--quiet / -q"
Don't output progress messages. Output only error messages.
.ie n .IP """\-\-verbose""\fR / \fB\-v" 4
.el .IP "\f(CW\-\-verbose\fR / \fB\-v\fR" 4
.IX Item "--verbose / -v"
Output verbose progress messages.
.ie n .IP """\-\-debug""\fR \fImagic\fR / \fB\-d\fR \fImagic" 4
.el .IP "\f(CW\-\-debug\fR \fImagic\fR / \fB\-d\fR \fImagic\fR" 4
.IX Item "--debug magic / -d magic"
Output debug messages, this option may be specified multiple times.
\&\fImagic\fR determines what is output:
.Sp
.Vb 6
\& magic          remark
\& \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\& script         internal progress messages of driver scripts
\& keep_tmpfiles  don\*(Aqt discard temporary files
\& markup         output markup trace, as explained in xindy manual
\& level=n        log level, n is 0 (default), 1, 2, or 3
.Ve
.ie n .IP """\-\-out\-file""\fR \fIoutfile.ind\fR / \fB\-o\fR \fIoutfile.ind" 4
.el .IP "\f(CW\-\-out\-file\fR \fIoutfile.ind\fR / \fB\-o\fR \fIoutfile.ind\fR" 4
.IX Item "--out-file outfile.ind / -o outfile.ind"
Output index to file \fIoutfile.ind\fR. If this option is not passed, the
name of the output file is the base name of the first argument and the
file extension \fIind\fR. If the raw index is read from standard input,
this option is mandatory.
.ie n .IP """\-\-log\-file""\fR \fIlog.ilg\fR / \fB\-t\fR \fIlog.ilg" 4
.el .IP "\f(CW\-\-log\-file\fR \fIlog.ilg\fR / \fB\-t\fR \fIlog.ilg\fR" 4
.IX Item "--log-file log.ilg / -t log.ilg"
Output log messages to file \fIlog.ilg\fR. These log messages are
independent from the progress messages that you can influence with
\&\f(CW\*(C`\-\-debug\*(C'\fR or \f(CW\*(C`\-\-verbose\*(C'\fR.
.ie n .IP """\-\-language""\fR \fIlang\fR / \fB\-L\fR \fIlang" 4
.el .IP "\f(CW\-\-language\fR \fIlang\fR / \fB\-L\fR \fIlang\fR" 4
.IX Item "--language lang / -L lang"
The index is sorted according to the rules of language \fIlang\fR. These
rules are encoded in a xindy module created by \fImake-rules\fR.
.Sp
If no input encoding is specified via \f(CW\*(C`\-\-codepage\*(C'\fR, a xindy module
for that language is searched with a latin, a cp, an iso, or ascii
encoding, in that order.
.ie n .IP """\-\-codepage""\fR \fIenc\fR / \fB\-C\fR \fIenc" 4
.el .IP "\f(CW\-\-codepage\fR \fIenc\fR / \fB\-C\fR \fIenc\fR" 4
.IX Item "--codepage enc / -C enc"
The raw input is in input encoding \fIenc\fR. This information is used to
select the correct xindy sort module and also the \fIinputenc\fR target
encoding for \f(CW\*(C`latex\*(C'\fR input markup.
.Sp
When \f(CW\*(C`omega\*(C'\fR input markup is used, \f(CW\*(C`utf8\*(C'\fR is always used as
codepage, this option is then ignored.
.ie n .IP """\-\-module""\fR \fImodule\fR / \fB\-M\fR \fImodule" 4
.el .IP "\f(CW\-\-module\fR \fImodule\fR / \fB\-M\fR \fImodule\fR" 4
.IX Item "--module module / -M module"
Load the xindy module \fImodule.xdy\fR. This option may be specified
multiple times. The modules are searched in the xindy search path that
can be changed with the environment variable \f(CW\*(C`XINDY_SEARCHPATH\*(C'\fR.
.ie n .IP """\-\-input\-markup""\fR \fIinput\fR / \fB\-I\fR \fIinput" 4
.el .IP "\f(CW\-\-input\-markup\fR \fIinput\fR / \fB\-I\fR \fIinput\fR" 4
.IX Item "--input-markup input / -I input"
Specifies the input markup of the raw index. Supported values for
\&\fIinput\fR are \f(CW\*(C`latex\*(C'\fR, \f(CW\*(C`omega\*(C'\fR, and \f(CW\*(C`xindy\*(C'\fR.
.Sp
\&\f(CW\*(C`latex\*(C'\fR input markup is the one that is emitted by default from the
LaTeX kernel, or by the \f(CW\*(C`index\*(C'\fR macro package of David Jones.
^^\-notation of single byte characters is supported. Usage of LaTeX's
\&\fIinputenc\fR package is assumed as well.
.Sp
\&\f(CW\*(C`omega\*(C'\fR input markup is like \f(CW\*(C`latex\*(C'\fR input markup, but with Omega's
^^\-notation as encoding for non-ASCII characters. LaTeX \fIinputenc\fR
encoding is not used then, and \f(CW\*(C`utf8\*(C'\fR is enforced to be the codepage.
.Sp
\&\f(CW\*(C`xindy\*(C'\fR input markup is specified in the xindy manual.
.ie n .IP """\-\-interactive""" 4
.el .IP "\f(CW\-\-interactive\fR" 4
.IX Item "--interactive"
Start xindy in interactive mode. You will be in a xindy read-eval-loop
where xindy language expressions are read and evaluated interactively.
.ie n .IP """\-\-mem\-file""\fR \fIxindy.mem" 4
.el .IP "\f(CW\-\-mem\-file\fR \fIxindy.mem\fR" 4
.IX Item "--mem-file xindy.mem"
This option is only usable for developers or in very rare situations.
The compiled xindy kernel is stored in a so-called \fImemory file\fR,
canonically named \fIxindy.mem\fR, and located in the xindy library
directory. This option allows to use another xindy kernel.
.SH "SUPPORTED LANGUAGES / CODEPAGES"
.IX Header "SUPPORTED LANGUAGES / CODEPAGES"
The following languages are supported:
.Sh "Latin scripts"
.IX Subsection "Latin scripts"
.Vb 10
\& albanian      gypsy             portuguese
\& croatian      hausa             romanian
\& czech         hungarian         russian\-iso
\& danish        icelandic         slovak\-small
\& english       italian           slovak\-large
\& esperanto     kurdish\-bedirxan  slovenian
\& estonian      kurdish\-turkish   spanish\-modern
\& finnish       latin             spanish\-traditional
\& french        latvian           swedish
\& general       lithuanian        turkish
\& german\-din    lower\-sorbian     upper\-sorbian
\& german\-duden  norwegian         vietnamese
\& greek\-iso     polish
.Ve
.PP
German recognizes two different sorting schemes to handle umlauts:
normally, \f(CW\*(C`a\*:\*(C'\fR is sorted like \f(CW\*(C`ae\*(C'\fR, but in phone books or
dictionaries, it is sorted like \f(CW\*(C`a\*(C'\fR. The first scheme is known as
\&\fI\s-1DIN\s0 order\fR, the second as \fIDuden order\fR.
.PP
\&\f(CW\*(C`*\-iso\*(C'\fR language names assume that the raw index entries are in \s-1ISO\s0
8859\-9 encoding.
.PP
\&\f(CW\*(C`gypsy\*(C'\fR is a northern Russian dialect.
.Sh "Cyrillic scripts"
.IX Subsection "Cyrillic scripts"
.Vb 3
\& belarusian    mongolian         serbian
\& bulgarian     russian           ukrainian
\& macedonian
.Ve
.Sh "Other scripts"
.IX Subsection "Other scripts"
.Vb 1
\& greek         klingon
.Ve
.Sh "Available Codepages"
.IX Subsection "Available Codepages"
This is not yet written. You can look them up in your xindy
distribution, in the \fImodules/lang/language/\fR directory (where
\&\fIlanguage\fR is your language). They are named
\&\fIvariant\-codepage\-lang.xdy\fR, where \fIvariant\-\fR is most often empty
(for german, it's \f(CW\*(C`din5007\*(C'\fR and \f(CW\*(C`duden\*(C'\fR; for spanish, it's \f(CW\*(C`modern\*(C'\fR
and \f(CW\*(C`traditional\*(C'\fR, etc.)
.PP
.Vb 1
\& < Describe available codepages for each language >
\&
\& < Describe relevance of codepages (as internal representation) for
\&   LaTeX inputenc >
.Ve
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.ie n .IP """XINDY_SEARCHPATH""" 4
.el .IP "\f(CWXINDY_SEARCHPATH\fR" 4
.IX Item "XINDY_SEARCHPATH"
A list of directories where the xindy modules are searched in. No
subtree searching is done (as in TDS-conformant TeX).
.Sp
If this environment variable is not set, the default is used:
\&\f(CW\*(C`.:\*(C'\fR\fImodules_dir\fR\f(CW\*(C`:\*(C'\fR\fImodules_dir\fR\f(CW\*(C`/base\*(C'\fR. \fImodules_dir\fR is
determined at run time, relative to the \fBxindy\fR command location:
Either it's \fI../modules\fR, that's the case for \fIopt\fR\-installations.
Or it's \fI../lib/xindy/modules\fR, that's the case for
\&\fIusr\fR\-installations.
.ie n .IP """XINDY_LIBDIR""" 4
.el .IP "\f(CWXINDY_LIBDIR\fR" 4
.IX Item "XINDY_LIBDIR"
Library directory where \fIxindy.mem\fR is located.
.Sp
The modules directory may be a subdirectory, too.
.SH "COMPATIBILITY TO MAKEINDEX"
.IX Header "COMPATIBILITY TO MAKEINDEX"
\&\fBxindy\fR does not claim to be completely compatible with MakeIndex,
that would prevent some of its enhancements. That said, we strive to
deliver as much compatibility as possible. The most important
incompatibilities are
.IP "\(bu" 4
For raw index entries in LaTeX syntax, \f(CW\*(C`\eindex{aaa|bbb}\*(C'\fR is
interpreted differently. For MakeIndex \f(CW\*(C`bbb\*(C'\fR is markup that is output
as a LaTeX tag for this page number. For \fBxindy\fR, this is a location
attribute, an abstract identifier that will be later associated with
markup that should be output for that attribute.
.Sp
For straight-forward usage, when \f(CW\*(C`bbb\*(C'\fR is \f(CW\*(C`textbf\*(C'\fR or similar, we
supply location attribute definitions that mimic MakeIndex's
behaviour.
.Sp
For more complex usage, when \f(CW\*(C`bbb\*(C'\fR is not an identifier, no such
compatibility definitions exist and may also not been created with
current \fBxindy\fR. In particular, this means that by default the LaTeX
package \f(CW\*(C`hyperref\*(C'\fR will create raw index files that cannot be
processed with \fBxindy\fR. This is not a bug, this is the unfortunate
result of an intented incompatibility. It is currently not possible to
get both hyperref's index links and use \fBxindy\fR.
.Sp
A similar situation is reported to exist for the \f(CW\*(C`memoir\*(C'\fR LaTeX
class.
.Sp
Programmers who know Common Lisp and Lex and want to work on a remedy
should please contact the author.
.IP "\(bu" 4
The MakeIndex compatibility definitions support only the default raw
index syntax and markup definition. It is not possible to configure
raw index parsing or use a MakeIndex style file to describe output
markup.
.SH "KNOWN ISSUES"
.IX Header "KNOWN ISSUES"
Option \fB\-q\fR also prevents output of error messages. Error messages
should be output on stderr, progress messages on stdout.
.PP
There should be a way to output the final index to stdout. This would
imply \fB\-q\fR, of course.
.PP
LaTeX raw index parsing should be configurable.
.PP
Codepage \f(CW\*(C`utf8\*(C'\fR should be supported for all languages, and should be
used as internal codepage for LaTeX inputenc re-encoding.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fItexindy\fR\|(1),
\&\fItex2xindy\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
Joachim Schrod
.SH "LEGALESE"
.IX Header "LEGALESE"
Copyright (c) 2004\-2010 by Joachim Schrod.
.PP
\&\fBxindy\fR is free software; you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the
\&\s-1GNU\s0 General Public License for more details.
