diff -bu a/source/libs/luajit/LuaJIT-src/src/lauxlib.h  b/source/libs/luajit/LuaJIT-src/src/lauxlib.h 
--- a/source/libs/luajit/LuaJIT-src/src/lauxlib.h
+++ b/source/libs/luajit/LuaJIT-src/src/lauxlib.h
@@ -93,6 +93,31 @@
 
 
 /*
+** {======================================================
+** File handles for IO library
+** =======================================================
+*/
+
+/*
+** A file handle is a userdata with metatable 'LUA_FILEHANDLE' and
+** initial structure 'luaL_Stream' (it may contain other fields
+** after that initial structure).
+*/
+
+#define LUA_FILEHANDLE          "FILE*"
+
+
+typedef struct luaL_Stream {
+  FILE *f;  /* stream (NULL for incompletely created streams) */
+  lua_CFunction closef;  /* to close stream (NULL for closed streams) */
+} luaL_Stream;
+
+/* }====================================================== */
+
+
+
+
+/*
 ** ===============================================================
 ** some useful macros
 ** ===============================================================
@@ -155,6 +180,12 @@
 LUALIB_API void (luaL_addvalue) (luaL_Buffer *B);
 LUALIB_API void (luaL_pushresult) (luaL_Buffer *B);
 
+/* -- Luajittex needs this one because it's faster than make it with Lua  -- */
+LUA_API int (RESERVED_lua_dump) (lua_State *L, lua_Writer writer, void *data, int strip);
+/* Luajittex needs this one because it overloads loadfile */
+LUALIB_API int (RESERVED_load_aux_JIT) (lua_State *L, int status, int envarg);
+
+
 
 /* }====================================================== */
 
