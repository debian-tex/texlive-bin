# Makefile.in generated by automake 1.12.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = xindy-2.4/make-rules/alphabets
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../../m4/kpse-progs.m4 \
	$(top_srcdir)/../../m4/kpse-warnings.m4 \
	$(top_srcdir)/../../m4/kpse-win32.m4 $(top_srcdir)/version.ac \
	$(top_srcdir)/ac/xindy.ac $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(docdir)" "$(DESTDIR)$(albaniandir)" \
	"$(DESTDIR)$(belarusiandir)" "$(DESTDIR)$(bulgariandir)" \
	"$(DESTDIR)$(croatiandir)" "$(DESTDIR)$(czechdir)" \
	"$(DESTDIR)$(danishdir)" "$(DESTDIR)$(dutchdir)" \
	"$(DESTDIR)$(englishdir)" "$(DESTDIR)$(esperantodir)" \
	"$(DESTDIR)$(estoniandir)" "$(DESTDIR)$(finnishdir)" \
	"$(DESTDIR)$(frenchdir)" "$(DESTDIR)$(generaldir)" \
	"$(DESTDIR)$(georgiandir)" "$(DESTDIR)$(germandir)" \
	"$(DESTDIR)$(greekdir)" "$(DESTDIR)$(gypsydir)" \
	"$(DESTDIR)$(hausadir)" "$(DESTDIR)$(hebrewdir)" \
	"$(DESTDIR)$(hungariandir)" "$(DESTDIR)$(icelandicdir)" \
	"$(DESTDIR)$(italiandir)" "$(DESTDIR)$(klingondir)" \
	"$(DESTDIR)$(kurdishdir)" "$(DESTDIR)$(latindir)" \
	"$(DESTDIR)$(latviandir)" "$(DESTDIR)$(lithuaniandir)" \
	"$(DESTDIR)$(lower_sorbiandir)" "$(DESTDIR)$(macedoniandir)" \
	"$(DESTDIR)$(mongoliandir)" "$(DESTDIR)$(norwegiandir)" \
	"$(DESTDIR)$(persiandir)" "$(DESTDIR)$(polishdir)" \
	"$(DESTDIR)$(portuguesedir)" "$(DESTDIR)$(romaniandir)" \
	"$(DESTDIR)$(russiandir)" "$(DESTDIR)$(serbiandir)" \
	"$(DESTDIR)$(slovakdir)" "$(DESTDIR)$(sloveniandir)" \
	"$(DESTDIR)$(spanishdir)" "$(DESTDIR)$(swedishdir)" \
	"$(DESTDIR)$(turkishdir)" "$(DESTDIR)$(ukrainiandir)" \
	"$(DESTDIR)$(upper_sorbiandir)" "$(DESTDIR)$(vietnamesedir)"
DATA = $(doc_DATA) $(nodist_albanian_DATA) $(nodist_belarusian_DATA) \
	$(nodist_bulgarian_DATA) $(nodist_croatian_DATA) \
	$(nodist_czech_DATA) $(nodist_danish_DATA) \
	$(nodist_dutch_DATA) $(nodist_english_DATA) \
	$(nodist_esperanto_DATA) $(nodist_estonian_DATA) \
	$(nodist_finnish_DATA) $(nodist_french_DATA) \
	$(nodist_general_DATA) $(nodist_georgian_DATA) \
	$(nodist_german_DATA) $(nodist_greek_DATA) \
	$(nodist_gypsy_DATA) $(nodist_hausa_DATA) \
	$(nodist_hebrew_DATA) $(nodist_hungarian_DATA) \
	$(nodist_icelandic_DATA) $(nodist_italian_DATA) \
	$(nodist_klingon_DATA) $(nodist_kurdish_DATA) \
	$(nodist_latin_DATA) $(nodist_latvian_DATA) \
	$(nodist_lithuanian_DATA) $(nodist_lower_sorbian_DATA) \
	$(nodist_macedonian_DATA) $(nodist_mongolian_DATA) \
	$(nodist_norwegian_DATA) $(nodist_persian_DATA) \
	$(nodist_polish_DATA) $(nodist_portuguese_DATA) \
	$(nodist_romanian_DATA) $(nodist_russian_DATA) \
	$(nodist_serbian_DATA) $(nodist_slovak_DATA) \
	$(nodist_slovenian_DATA) $(nodist_spanish_DATA) \
	$(nodist_swedish_DATA) $(nodist_turkish_DATA) \
	$(nodist_ukrainian_DATA) $(nodist_upper_sorbian_DATA) \
	$(nodist_vietnamese_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
pkglibdir = @pkglibdir@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLISP = @CLISP@
CONVERT_FROM_UTF8 = @CONVERT_FROM_UTF8@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LISP_RUN = @LISP_RUN@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PERL = @PERL@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WARNING_CFLAGS = @WARNING_CFLAGS@
XINDY_RUN = @XINDY_RUN@
XINDY_TREE = @XINDY_TREE@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
memdir = @memdir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
langdir = $(pkglibdir)/modules/lang
DISTCLEANFILES = albanian/utf8.pl belarusian/utf8.pl bulgarian/utf8.pl \
	croatian/utf8.pl czech/utf8.pl danish/utf8.pl \
	dutch/ij-as-ij-utf8.pl dutch/ij-as-y-utf8.pl english/utf8.pl \
	esperanto/utf8.pl estonian/utf8.pl finnish/utf8.pl \
	french/utf8.pl general/utf8.pl georgian/utf8.pl \
	german/braille-utf8.pl german/din5007-utf8.pl \
	german/duden-utf8.pl greek/polytonic-utf8.pl \
	greek/translit-utf8.pl greek/utf8.pl \
	gypsy/northrussian-utf8.pl hausa/utf8.pl hebrew/utf8.pl \
	hungarian/utf8.pl icelandic/utf8.pl italian/utf8.pl \
	klingon/utf8.pl kurdish/bedirxan-utf8.pl \
	kurdish/turkish-i-utf8.pl latin/utf8.pl latvian/utf8.pl \
	lithuanian/utf8.pl lower-sorbian/utf8.pl macedonian/utf8.pl \
	mongolian/cyrillic-utf8.pl norwegian/utf8.pl persian/utf8.pl \
	polish/utf8.pl portuguese/utf8.pl romanian/utf8.pl \
	russian/translit-iso-utf8.pl russian/utf8.pl serbian/utf8.pl \
	slovak/large-utf8.pl slovak/small-utf8.pl slovenian/utf8.pl \
	spanish/modern-utf8.pl spanish/traditional-utf8.pl \
	swedish/utf8.pl turkish/utf8.pl ukrainian/utf8.pl \
	upper-sorbian/utf8.pl vietnamese/utf8.pl romanian/cp1250.pl
albaniandir = $(langdir)/albanian
ALBANIAN = \
	albanian/latin1-lang.xdy \
	albanian/latin1-test.xdy \
	albanian/latin1.xdy \
	albanian/utf8-lang.xdy \
	albanian/utf8-test.xdy \
	albanian/utf8.xdy

nodist_albanian_DATA = $(ALBANIAN)
belarusiandir = $(langdir)/belarusian
BELARUSIAN = \
	belarusian/cp1251-lang.xdy \
	belarusian/cp1251-test.xdy \
	belarusian/cp1251.xdy \
	belarusian/iso88595-lang.xdy \
	belarusian/iso88595-test.xdy \
	belarusian/iso88595.xdy \
	belarusian/isoir111-lang.xdy \
	belarusian/isoir111-test.xdy \
	belarusian/isoir111.xdy \
	belarusian/utf8-lang.xdy \
	belarusian/utf8-test.xdy \
	belarusian/utf8.xdy

nodist_belarusian_DATA = $(BELARUSIAN)
bulgariandir = $(langdir)/bulgarian
BULGARIAN = \
	bulgarian/cp1251-lang.xdy \
	bulgarian/cp1251-test.xdy \
	bulgarian/cp1251.xdy \
	bulgarian/iso88595-lang.xdy \
	bulgarian/iso88595-test.xdy \
	bulgarian/iso88595.xdy \
	bulgarian/koi8-r-lang.xdy \
	bulgarian/koi8-r-test.xdy \
	bulgarian/koi8-r.xdy \
	bulgarian/utf8-lang.xdy \
	bulgarian/utf8-test.xdy \
	bulgarian/utf8.xdy

nodist_bulgarian_DATA = $(BULGARIAN)
croatiandir = $(langdir)/croatian
CROATIAN = \
	croatian/cp1250-lang.xdy \
	croatian/cp1250-test.xdy \
	croatian/cp1250.xdy \
	croatian/latin2-lang.xdy \
	croatian/latin2-test.xdy \
	croatian/latin2.xdy \
	croatian/utf8-lang.xdy \
	croatian/utf8-test.xdy \
	croatian/utf8.xdy

nodist_croatian_DATA = $(CROATIAN)
czechdir = $(langdir)/czech
CZECH = \
	czech/cp1250-lang.xdy \
	czech/cp1250-test.xdy \
	czech/cp1250.xdy \
	czech/latin2-lang.xdy \
	czech/latin2-test.xdy \
	czech/latin2.xdy \
	czech/utf8-lang.xdy \
	czech/utf8-test.xdy \
	czech/utf8.xdy

nodist_czech_DATA = $(CZECH)
danishdir = $(langdir)/danish
DANISH = \
	danish/cp1252-lang.xdy \
	danish/cp1252-test.xdy \
	danish/cp1252.xdy \
	danish/latin9-lang.xdy \
	danish/latin9-test.xdy \
	danish/latin9.xdy \
	danish/utf8-lang.xdy \
	danish/utf8-test.xdy \
	danish/utf8.xdy

nodist_danish_DATA = $(DANISH)
dutchdir = $(langdir)/dutch
DUTCH = \
	dutch/ij-as-ij-latin1-lang.xdy \
	dutch/ij-as-ij-latin1-test.xdy \
	dutch/ij-as-ij-latin1.xdy \
	dutch/ij-as-ij-utf8-lang.xdy \
	dutch/ij-as-ij-utf8-test.xdy \
	dutch/ij-as-ij-utf8.xdy \
	dutch/ij-as-y-utf8-lang.xdy \
	dutch/ij-as-y-utf8-test.xdy \
	dutch/ij-as-y-utf8.xdy

nodist_dutch_DATA = $(DUTCH)
englishdir = $(langdir)/english
ENGLISH = \
	english/cp1252-lang.xdy \
	english/cp1252-test.xdy \
	english/cp1252.xdy \
	english/latin9-lang.xdy  \
	english/latin9-test.xdy \
	english/latin9.xdy \
	english/utf8-lang.xdy \
	english/utf8-test.xdy \
	english/utf8.xdy

nodist_english_DATA = $(ENGLISH)
esperantodir = $(langdir)/esperanto
ESPERANTO = \
	esperanto/latin3-lang.xdy \
	esperanto/latin3-test.xdy \
	esperanto/latin3.xdy \
	esperanto/utf8-lang.xdy \
	esperanto/utf8-test.xdy \
	esperanto/utf8.xdy

nodist_esperanto_DATA = $(ESPERANTO)
estoniandir = $(langdir)/estonian
ESTONIAN = \
	estonian/cp1252-lang.xdy \
	estonian/cp1252-test.xdy \
	estonian/cp1252.xdy \
	estonian/latin9-lang.xdy \
	estonian/latin9-test.xdy \
	estonian/latin9.xdy \
	estonian/utf8-lang.xdy \
	estonian/utf8-test.xdy \
	estonian/utf8.xdy

nodist_estonian_DATA = $(ESTONIAN)
finnishdir = $(langdir)/finnish
FINNISH = \
	finnish/cp1252-lang.xdy \
	finnish/cp1252-test.xdy \
	finnish/cp1252.xdy \
	finnish/latin9-lang.xdy \
	finnish/latin9-test.xdy \
	finnish/latin9.xdy \
	finnish/utf8-lang.xdy \
	finnish/utf8-test.xdy \
	finnish/utf8.xdy

nodist_finnish_DATA = $(FINNISH)
frenchdir = $(langdir)/french
FRENCH = \
	french/cp1252-lang.xdy \
	french/cp1252-test.xdy \
	french/cp1252.xdy \
	french/latin9-lang.xdy \
	french/latin9-test.xdy \
	french/latin9.xdy \
	french/utf8-lang.xdy \
	french/utf8-test.xdy \
	french/utf8.xdy

nodist_french_DATA = $(FRENCH)
generaldir = $(langdir)/general
GENERAL = \
	general/cp1252-lang.xdy \
	general/cp1252-test.xdy \
	general/cp1252.xdy \
	general/cp850-lang.xdy \
	general/cp850-test.xdy \
	general/cp850.xdy \
	general/latin9-lang.xdy \
	general/latin9-test.xdy \
	general/latin9.xdy \
	general/utf8-lang.xdy \
	general/utf8-test.xdy \
	general/utf8.xdy

nodist_general_DATA = $(GENERAL)
georgiandir = $(langdir)/georgian
GEORGIAN = \
	georgian/utf8-lang.xdy \
	georgian/utf8-test.xdy \
	georgian/utf8.xdy

nodist_georgian_DATA = $(GEORGIAN)
germandir = $(langdir)/german
GERMAN = \
	german/braille-utf8-lang.xdy \
	german/braille-utf8-test.xdy \
	german/braille-utf8.xdy \
	german/din5007-latin1-lang.xdy \
	german/din5007-latin1-test.xdy \
	german/din5007-latin1.xdy \
	german/din5007-utf8-lang.xdy \
	german/din5007-utf8-test.xdy \
	german/din5007-utf8.xdy \
	german/duden-latin1-lang.xdy \
	german/duden-latin1-test.xdy \
	german/duden-latin1.xdy \
	german/duden-utf8-lang.xdy \
	german/duden-utf8-test.xdy \
	german/duden-utf8.xdy

nodist_german_DATA = $(GERMAN)
greekdir = $(langdir)/greek
GREEK = \
	greek/iso88597-lang.xdy \
	greek/iso88597-test.xdy \
	greek/iso88597.xdy \
	greek/polytonic-utf8-lang.xdy \
	greek/polytonic-utf8-test.xdy \
	greek/polytonic-utf8.xdy \
	greek/translit-latin4-lang.xdy \
	greek/translit-latin4-test.xdy \
	greek/translit-latin4.xdy \
	greek/translit-utf8-lang.xdy \
	greek/translit-utf8-test.xdy \
	greek/translit-utf8.xdy \
	greek/utf8-lang.xdy \
	greek/utf8-test.xdy \
	greek/utf8.xdy

nodist_greek_DATA = $(GREEK)
gypsydir = $(langdir)/gypsy
GYPSY = \
	gypsy/northrussian-utf8-lang.xdy \
	gypsy/northrussian-utf8-test.xdy \
	gypsy/northrussian-utf8.xdy

nodist_gypsy_DATA = $(GYPSY)
hausadir = $(langdir)/hausa
HAUSA = \
	hausa/utf8-lang.xdy \
	hausa/utf8-test.xdy \
	hausa/utf8.xdy

nodist_hausa_DATA = $(HAUSA)
hebrewdir = $(langdir)/hebrew
HEBREW = \
	hebrew/iso88598-lang.xdy \
	hebrew/iso88598-test.xdy \
	hebrew/iso88598.xdy \
	hebrew/utf8-lang.xdy \
	hebrew/utf8-test.xdy \
	hebrew/utf8.xdy

nodist_hebrew_DATA = $(HEBREW)
hungariandir = $(langdir)/hungarian
HUNGARIAN = \
	hungarian/cp1250-lang.xdy \
	hungarian/cp1250-test.xdy \
	hungarian/cp1250.xdy \
	hungarian/latin2-lang.xdy \
	hungarian/latin2-test.xdy \
	hungarian/latin2.xdy \
	hungarian/utf8-lang.xdy \
	hungarian/utf8-test.xdy \
	hungarian/utf8.xdy

nodist_hungarian_DATA = $(HUNGARIAN)
icelandicdir = $(langdir)/icelandic
ICELANDIC = \
	icelandic/cp1252-lang.xdy \
	icelandic/cp1252-test.xdy \
	icelandic/cp1252.xdy \
	icelandic/latin9-lang.xdy \
	icelandic/latin9-test.xdy \
	icelandic/latin9.xdy \
	icelandic/utf8-lang.xdy \
	icelandic/utf8-test.xdy \
	icelandic/utf8.xdy

nodist_icelandic_DATA = $(ICELANDIC)
italiandir = $(langdir)/italian
ITALIAN = \
	italian/latin1-lang.xdy \
	italian/latin1-test.xdy \
	italian/latin1.xdy \
	italian/utf8-lang.xdy \
	italian/utf8-test.xdy \
	italian/utf8.xdy

nodist_italian_DATA = $(ITALIAN)
klingondir = $(langdir)/klingon
KLINGON = \
	klingon/utf8-lang.xdy \
	klingon/utf8-test.xdy \
	klingon/utf8.xdy

nodist_klingon_DATA = $(KLINGON)
kurdishdir = $(langdir)/kurdish
KURDISH = \
	kurdish/bedirxan-latin5-lang.xdy \
	kurdish/bedirxan-latin5-test.xdy \
	kurdish/bedirxan-latin5.xdy \
	kurdish/bedirxan-utf8-lang.xdy \
	kurdish/bedirxan-utf8-test.xdy \
	kurdish/bedirxan-utf8.xdy \
	kurdish/turkish-i-latin5-lang.xdy \
	kurdish/turkish-i-latin5-test.xdy \
	kurdish/turkish-i-latin5.xdy \
	kurdish/turkish-i-utf8-lang.xdy \
	kurdish/turkish-i-utf8-test.xdy \
	kurdish/turkish-i-utf8.xdy

nodist_kurdish_DATA = $(KURDISH)
latindir = $(langdir)/latin
LATIN = \
	latin/utf8-lang.xdy \
	latin/utf8-test.xdy \
	latin/utf8.xdy

nodist_latin_DATA = $(LATIN)
latviandir = $(langdir)/latvian
LATVIAN = \
	latvian/latin4-lang.xdy \
	latvian/latin4-test.xdy \
	latvian/latin4.xdy \
	latvian/utf8-lang.xdy \
	latvian/utf8-test.xdy \
	latvian/utf8.xdy

nodist_latvian_DATA = $(LATVIAN)
lithuaniandir = $(langdir)/lithuanian
LITHUANIAN = \
	lithuanian/latin4-lang.xdy \
	lithuanian/latin4-test.xdy \
	lithuanian/latin4.xdy \
	lithuanian/utf8-lang.xdy \
	lithuanian/utf8-test.xdy \
	lithuanian/utf8.xdy

nodist_lithuanian_DATA = $(LITHUANIAN)
lower_sorbiandir = $(langdir)/lower-sorbian
LOWER_SORBIAN = \
	lower-sorbian/cp1250-lang.xdy \
	lower-sorbian/cp1250-test.xdy \
	lower-sorbian/cp1250.xdy \
	lower-sorbian/latin2-lang.xdy \
	lower-sorbian/latin2-test.xdy \
	lower-sorbian/latin2.xdy \
	lower-sorbian/utf8-lang.xdy \
	lower-sorbian/utf8-test.xdy \
	lower-sorbian/utf8.xdy

nodist_lower_sorbian_DATA = $(LOWER_SORBIAN)
macedoniandir = $(langdir)/macedonian
MACEDONIAN = \
	macedonian/cp1251-lang.xdy \
	macedonian/cp1251-test.xdy \
	macedonian/cp1251.xdy \
	macedonian/iso88595-lang.xdy \
	macedonian/iso88595-test.xdy \
	macedonian/iso88595.xdy \
	macedonian/isoir111-lang.xdy \
	macedonian/isoir111-test.xdy \
	macedonian/isoir111.xdy \
	macedonian/utf8-lang.xdy \
	macedonian/utf8-test.xdy \
	macedonian/utf8.xdy

nodist_macedonian_DATA = $(MACEDONIAN)
mongoliandir = $(langdir)/mongolian
MONGOLIAN = \
	mongolian/cyrillic-utf8-lang.xdy \
	mongolian/cyrillic-utf8-test.xdy \
	mongolian/cyrillic-utf8.xdy

nodist_mongolian_DATA = $(MONGOLIAN)
norwegiandir = $(langdir)/norwegian
NORWEGIAN = \
	norwegian/latin1-lang.xdy \
	norwegian/latin1-test.xdy \
	norwegian/latin1.xdy \
	norwegian/utf8-lang.xdy \
	norwegian/utf8-test.xdy \
	norwegian/utf8.xdy

nodist_norwegian_DATA = $(NORWEGIAN)
persiandir = $(langdir)/persian
PERSIAN = \
	persian/utf8-lang.xdy \
	persian/utf8-test.xdy \
	persian/utf8.xdy

nodist_persian_DATA = $(PERSIAN)
polishdir = $(langdir)/polish
POLISH = \
	polish/cp1250-lang.xdy \
	polish/cp1250-test.xdy \
	polish/cp1250.xdy \
	polish/latin2-lang.xdy \
	polish/latin2-test.xdy \
	polish/latin2.xdy \
	polish/utf8-lang.xdy \
	polish/utf8-test.xdy \
	polish/utf8.xdy

nodist_polish_DATA = $(POLISH)
portuguesedir = $(langdir)/portuguese
PORTUGUESE = \
	portuguese/latin1-lang.xdy \
	portuguese/latin1-test.xdy \
	portuguese/latin1.xdy \
	portuguese/utf8-lang.xdy \
	portuguese/utf8-test.xdy \
	portuguese/utf8.xdy

nodist_portuguese_DATA = $(PORTUGUESE)
romaniandir = $(langdir)/romanian
ROMANIAN = \
	romanian/latin2-lang.xdy \
	romanian/latin2-test.xdy \
	romanian/latin2.xdy \
	romanian/utf8-lang.xdy \
	romanian/utf8-test.xdy \
	romanian/utf8.xdy

nodist_romanian_DATA = $(ROMANIAN)
russiandir = $(langdir)/russian
RUSSIAN = \
	russian/cp1251-lang.xdy \
	russian/cp1251-test.xdy \
	russian/cp1251.xdy \
	russian/iso88595-lang.xdy \
	russian/iso88595-test.xdy \
	russian/iso88595.xdy \
	russian/koi8-r-lang.xdy \
	russian/koi8-r-test.xdy \
	russian/koi8-r.xdy \
	russian/translit-iso-utf8-lang.xdy \
	russian/translit-iso-utf8-test.xdy \
	russian/translit-iso-utf8.xdy \
	russian/utf8-lang.xdy \
	russian/utf8-test.xdy \
	russian/utf8.xdy

nodist_russian_DATA = $(RUSSIAN)
serbiandir = $(langdir)/serbian
SERBIAN = \
	serbian/cp1251-lang.xdy \
	serbian/cp1251-test.xdy \
	serbian/cp1251.xdy \
	serbian/iso88595-lang.xdy \
	serbian/iso88595-test.xdy \
	serbian/iso88595.xdy \
	serbian/isoir111-lang.xdy \
	serbian/isoir111-test.xdy \
	serbian/isoir111.xdy \
	serbian/utf8-lang.xdy \
	serbian/utf8-test.xdy \
	serbian/utf8.xdy

nodist_serbian_DATA = $(SERBIAN)
slovakdir = $(langdir)/slovak
SLOVAK = \
	slovak/large-cp1250-lang.xdy \
	slovak/large-cp1250-test.xdy \
	slovak/large-cp1250.xdy \
	slovak/large-latin2-lang.xdy \
	slovak/large-latin2-test.xdy \
	slovak/large-latin2.xdy \
	slovak/large-utf8-lang.xdy \
	slovak/large-utf8-test.xdy \
	slovak/large-utf8.xdy \
	slovak/small-cp1250-lang.xdy \
	slovak/small-cp1250-test.xdy \
	slovak/small-cp1250.xdy \
	slovak/small-latin2-lang.xdy \
	slovak/small-latin2-test.xdy \
	slovak/small-latin2.xdy \
	slovak/small-utf8-lang.xdy \
	slovak/small-utf8-test.xdy \
	slovak/small-utf8.xdy

nodist_slovak_DATA = $(SLOVAK)
sloveniandir = $(langdir)/slovenian
SLOVENIAN = \
	slovenian/cp1250-lang.xdy \
	slovenian/cp1250-test.xdy \
	slovenian/cp1250.xdy \
	slovenian/latin2-lang.xdy \
	slovenian/latin2-test.xdy \
	slovenian/latin2.xdy \
	slovenian/utf8-lang.xdy \
	slovenian/utf8-test.xdy \
	slovenian/utf8.xdy

nodist_slovenian_DATA = $(SLOVENIAN)
spanishdir = $(langdir)/spanish
SPANISH = \
	spanish/modern-latin1-lang.xdy \
	spanish/modern-latin1-test.xdy \
	spanish/modern-latin1.xdy \
	spanish/modern-utf8-lang.xdy \
	spanish/modern-utf8-test.xdy \
	spanish/modern-utf8.xdy \
	spanish/traditional-latin1-lang.xdy \
	spanish/traditional-latin1-test.xdy \
	spanish/traditional-latin1.xdy \
	spanish/traditional-utf8-lang.xdy \
	spanish/traditional-utf8-test.xdy \
	spanish/traditional-utf8.xdy

nodist_spanish_DATA = $(SPANISH)
swedishdir = $(langdir)/swedish
SWEDISH = \
	swedish/cp1252-lang.xdy \
	swedish/cp1252-test.xdy \
	swedish/cp1252.xdy \
	swedish/latin9-lang.xdy \
	swedish/latin9-test.xdy \
	swedish/latin9.xdy \
	swedish/utf8-lang.xdy \
	swedish/utf8-test.xdy \
	swedish/utf8.xdy

nodist_swedish_DATA = $(SWEDISH)
turkishdir = $(langdir)/turkish
TURKISH = \
	turkish/latin3-lang.xdy \
	turkish/latin3-test.xdy \
	turkish/latin3.xdy \
	turkish/latin5-lang.xdy \
	turkish/latin5-test.xdy \
	turkish/latin5.xdy \
	turkish/utf8-lang.xdy \
	turkish/utf8-test.xdy \
	turkish/utf8.xdy

nodist_turkish_DATA = $(TURKISH)
ukrainiandir = $(langdir)/ukrainian
UKRAINIAN = \
	ukrainian/cp1251-lang.xdy \
	ukrainian/cp1251-test.xdy \
	ukrainian/cp1251.xdy \
	ukrainian/koi8-u-lang.xdy \
	ukrainian/koi8-u-test.xdy \
	ukrainian/koi8-u.xdy \
	ukrainian/utf8-lang.xdy \
	ukrainian/utf8-test.xdy \
	ukrainian/utf8.xdy

nodist_ukrainian_DATA = $(UKRAINIAN)
upper_sorbiandir = $(langdir)/upper-sorbian
UPPER_SORBIAN = \
	upper-sorbian/cp1250-lang.xdy \
	upper-sorbian/cp1250-test.xdy \
	upper-sorbian/cp1250.xdy \
	upper-sorbian/latin2-lang.xdy \
	upper-sorbian/latin2-test.xdy \
	upper-sorbian/latin2.xdy \
	upper-sorbian/utf8-lang.xdy \
	upper-sorbian/utf8-test.xdy \
	upper-sorbian/utf8.xdy

nodist_upper_sorbian_DATA = $(UPPER_SORBIAN)
vietnamesedir = $(langdir)/vietnamese
VIETNAMESE = \
	vietnamese/utf8-lang.xdy \
	vietnamese/utf8-test.xdy \
	vietnamese/utf8.xdy

nodist_vietnamese_DATA = $(VIETNAMESE)
SUBDIRS = \
	albanian \
	belarusian \
	bulgarian \
	croatian \
	czech \
	danish \
	dutch \
	english \
	esperanto \
	estonian \
	finnish \
	french \
	general \
	georgian \
	german \
	greek \
	gypsy \
	hausa \
	hebrew \
	hungarian \
	icelandic \
	italian \
	klingon \
	kurdish \
	latin \
	latvian \
	lithuanian \
	lower-sorbian \
	macedonian \
	mongolian \
	norwegian \
	persian \
	polish \
	portuguese \
	romanian \
	russian \
	serbian \
	slovak \
	slovenian \
	spanish \
	swedish \
	test1 \
	turkish \
	ukrainian \
	upper-sorbian \
	vietnamese

SCRS = \
	alphabets-doc.tex \
	make-rules.pl \
	utf8-to-tex.sed

ALPHABETS = \
	$(ALBANIAN) \
	$(BELARUSIAN) \
	$(BULGARIAN) \
	$(CROATIAN) \
	$(CZECH) \
	$(DANISH) \
	$(DUTCH) \
	$(ENGLISH) \
	$(ESPERANTO) \
	$(ESTONIAN) \
	$(FINNISH) \
	$(FRENCH) \
	$(GENERAL) \
	$(GEORGIAN) \
	$(GERMAN) \
	$(GREEK) \
	$(GYPSY) \
	$(HAUSA) \
	$(HEBREW) \
	$(HUNGARIAN) \
	$(ICELANDIC) \
	$(ITALIAN) \
	$(KLINGON) \
	$(KURDISH) \
	$(LATIN) \
	$(LATVIAN) \
	$(LITHUANIAN) \
	$(LOWER_SORBIAN) \
	$(MACEDONIAN) \
	$(MONGOLIAN) \
	$(NORWEGIAN) \
	$(PERSIAN) \
	$(POLISH) \
	$(PORTUGUESE) \
	$(ROMANIAN) \
	$(RUSSIAN) \
	$(SERBIAN) \
	$(SLOVAK) \
	$(SLOVENIAN) \
	$(SPANISH) \
	$(SWEDISH) \
	$(TURKISH) \
	$(UKRAINIAN) \
	$(UPPER_SORBIAN) \
	$(VIETNAMESE)

DOCS_CP1250 = \
	croatian/cp1250-doc.tex \
	czech/cp1250-doc.tex \
	hungarian/cp1250-doc.tex \
	lower-sorbian/cp1250-doc.tex \
	polish/cp1250-doc.tex \
	slovak/large-cp1250-doc.tex \
	slovak/small-cp1250-doc.tex \
	slovenian/cp1250-doc.tex \
	upper-sorbian/cp1250-doc.tex

DOCS_CP1252 = \
	danish/cp1252-doc.tex \
	english/cp1252-doc.tex \
	estonian/cp1252-doc.tex \
	finnish/cp1252-doc.tex \
	french/cp1252-doc.tex \
	general/cp1252-doc.tex \
	icelandic/cp1252-doc.tex \
	swedish/cp1252-doc.tex

DOCS_CP850 = \
	general/cp850-doc.tex

DOCS_LATIN1 = \
	albanian/latin1-doc.tex \
	dutch/ij-as-ij-latin1-doc.tex \
	german/din5007-latin1-doc.tex \
	german/duden-latin1-doc.tex \
	italian/latin1-doc.tex \
	norwegian/latin1-doc.tex \
	portuguese/latin1-doc.tex \
	spanish/modern-latin1-doc.tex \
	spanish/traditional-latin1-doc.tex

DOCS_LATIN2 = \
	croatian/latin2-doc.tex \
	czech/latin2-doc.tex \
	hungarian/latin2-doc.tex \
	lower-sorbian/latin2-doc.tex \
	polish/latin2-doc.tex \
	romanian/latin2-doc.tex \
	slovak/small-latin2-doc.tex \
	slovak/large-latin2-doc.tex \
	slovenian/latin2-doc.tex \
	upper-sorbian/latin2-doc.tex

DOCS_LATIN3 = \
	esperanto/latin3-doc.tex \
	turkish/latin3-doc.tex

DOCS_LATIN4 = \
	greek/translit-latin4-doc.tex \
	latvian/latin4-doc.tex \
	lithuanian/latin4-doc.tex

DOCS_LATIN5 = \
	kurdish/bedirxan-latin5-doc.tex \
	kurdish/turkish-i-latin5-doc.tex \
	turkish/latin5-doc.tex

DOCS_LATIN9 = \
	danish/latin9-doc.tex \
	english/latin9-doc.tex \
	estonian/latin9-doc.tex \
	finnish/latin9-doc.tex \
	french/latin9-doc.tex \
	general/latin9-doc.tex \
	icelandic/latin9-doc.tex \
	swedish/latin9-doc.tex

DOCS_CYR_1251 = \
	belarusian/cp1251-doc.tex \
	bulgarian/cp1251-doc.tex \
	macedonian/cp1251-doc.tex \
	russian/cp1251-doc.tex \
	serbian/cp1251-doc.tex \
	ukrainian/cp1251-doc.tex

DOCS_CYR_ISO88595 = \
	belarusian/iso88595-doc.tex \
	bulgarian/iso88595-doc.tex \
	macedonian/iso88595-doc.tex \
	russian/iso88595-doc.tex \
	serbian/iso88595-doc.tex

DOCS_CYR_ISOIR111 = \
	belarusian/isoir111-doc.tex \
	macedonian/isoir111-doc.tex \
	serbian/isoir111-doc.tex

DOCS_CYR_KOI8_R = \
	bulgarian/koi8-r-doc.tex \
	russian/koi8-r-doc.tex

DOCS_CYR_KOI8_U = \
	ukrainian/koi8-u-doc.tex

DOCS_CYR = \
	$(DOCS_CYR_1251) \
	$(DOCS_CYR_ISO88595) \
	$(DOCS_CYR_ISOIR111) \
	$(DOCS_CYR_KOI8_R) \
	$(DOCS_CYR_KOI8_U)

DOCS_OTHER = \
	greek/iso88597-doc.tex \
	hebrew/iso88598-doc.tex

DOCS_UTF8_LAT = \
	albanian/utf8-doc.tex \
	croatian/utf8-doc.tex \
	czech/utf8-doc.tex \
	danish/utf8-doc.tex \
	dutch/ij-as-ij-utf8-doc.tex \
	dutch/ij-as-y-utf8-doc.tex \
	english/utf8-doc.tex \
	esperanto/utf8-doc.tex \
	estonian/utf8-doc.tex \
	finnish/utf8-doc.tex \
	french/utf8-doc.tex \
	general/utf8-doc.tex \
	german/din5007-utf8-doc.tex \
	german/duden-utf8-doc.tex \
	greek/translit-utf8-doc.tex \
	greek/utf8-doc.tex \
	gypsy/northrussian-utf8-doc.tex \
	hausa/utf8-doc.tex \
	hungarian/utf8-doc.tex \
	icelandic/utf8-doc.tex \
	italian/utf8-doc.tex \
	kurdish/bedirxan-utf8-doc.tex \
	kurdish/turkish-i-utf8-doc.tex \
	latin/utf8-doc.tex \
	latvian/utf8-doc.tex \
	lithuanian/utf8-doc.tex \
	lower-sorbian/utf8-doc.tex \
	norwegian/utf8-doc.tex \
	polish/utf8-doc.tex \
	portuguese/utf8-doc.tex \
	romanian/utf8-doc.tex \
	russian/translit-iso-utf8-doc.tex \
	slovak/small-utf8-doc.tex \
	slovak/large-utf8-doc.tex \
	slovenian/utf8-doc.tex \
	spanish/modern-utf8-doc.tex \
	spanish/traditional-utf8-doc.tex \
	swedish/utf8-doc.tex \
	turkish/utf8-doc.tex \
	upper-sorbian/utf8-doc.tex \
	vietnamese/utf8-doc.tex

DOCS_UTF8_CYR = \
	belarusian/utf8-doc.tex \
	bulgarian/utf8-doc.tex \
	macedonian/utf8-doc.tex \
	mongolian/cyrillic-utf8-doc.tex \
	russian/utf8-doc.tex \
	serbian/utf8-doc.tex \
	ukrainian/utf8-doc.tex

DOCS_UTF8_OTHER = \
	georgian/utf8-doc.tex \
	german/braille-utf8-doc.tex \
	greek/utf8-doc.tex \
	greek/polytonic-utf8-doc.tex \
	hebrew/utf8-doc.tex \
	klingon/utf8-doc.tex \
	persian/utf8-doc.tex

DOCS_CPS = \
	$(DOCS_CP1250) \
	$(DOCS_CP1252) \
	$(DOCS_CP850)

DOCS_LAT = \
	$(DOCS_LATIN1) \
	$(DOCS_LATIN2) \
	$(DOCS_LATIN3) \
	$(DOCS_LATIN4) \
	$(DOCS_LATIN5) \
	$(DOCS_LATIN9)

DOCS_UTF8 = \
	$(DOCS_UTF8_LAT) \
	$(DOCS_UTF8_CYR) \
	$(DOCS_UTF8_OTHER)

DOCS = $(DOCS_CPS) $(DOCS_LAT) $(DOCS_CYR) $(DOCS_OTHER) $(DOCS_UTF8)
@BUILDDOCS_TRUE@@BUILDRULES_TRUE@PDFS = alphabets-doc.pdf
@BUILDDOCS_TRUE@@BUILDRULES_TRUE@doc_DATA = $(PDFS)
DOC_CLEAN = \
	alphabets-doc.aux  \
	alphabets-doc.log \
	alphabets-doc.out  \
	alphabets-doc.pdf \
	alphabets-inc.tex \
	alphabets-doc.toc

EXTRA_DIST = $(SCRS) test.xdy rom-comma-kludge.sed
CLEANFILES = $(ALPHABETS) $(DOC_CLEAN)
all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign xindy-2.4/make-rules/alphabets/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign xindy-2.4/make-rules/alphabets/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-nodist_albanianDATA: $(nodist_albanian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_albanian_DATA)'; test -n "$(albaniandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(albaniandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(albaniandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(albaniandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(albaniandir)" || exit $$?; \
	done

uninstall-nodist_albanianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_albanian_DATA)'; test -n "$(albaniandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(albaniandir)'; $(am__uninstall_files_from_dir)
install-nodist_belarusianDATA: $(nodist_belarusian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_belarusian_DATA)'; test -n "$(belarusiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(belarusiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(belarusiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(belarusiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(belarusiandir)" || exit $$?; \
	done

uninstall-nodist_belarusianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_belarusian_DATA)'; test -n "$(belarusiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(belarusiandir)'; $(am__uninstall_files_from_dir)
install-nodist_bulgarianDATA: $(nodist_bulgarian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_bulgarian_DATA)'; test -n "$(bulgariandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bulgariandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bulgariandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(bulgariandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(bulgariandir)" || exit $$?; \
	done

uninstall-nodist_bulgarianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bulgarian_DATA)'; test -n "$(bulgariandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(bulgariandir)'; $(am__uninstall_files_from_dir)
install-nodist_croatianDATA: $(nodist_croatian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_croatian_DATA)'; test -n "$(croatiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(croatiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(croatiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(croatiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(croatiandir)" || exit $$?; \
	done

uninstall-nodist_croatianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_croatian_DATA)'; test -n "$(croatiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(croatiandir)'; $(am__uninstall_files_from_dir)
install-nodist_czechDATA: $(nodist_czech_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_czech_DATA)'; test -n "$(czechdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(czechdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(czechdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(czechdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(czechdir)" || exit $$?; \
	done

uninstall-nodist_czechDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_czech_DATA)'; test -n "$(czechdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(czechdir)'; $(am__uninstall_files_from_dir)
install-nodist_danishDATA: $(nodist_danish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_danish_DATA)'; test -n "$(danishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(danishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(danishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(danishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(danishdir)" || exit $$?; \
	done

uninstall-nodist_danishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_danish_DATA)'; test -n "$(danishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(danishdir)'; $(am__uninstall_files_from_dir)
install-nodist_dutchDATA: $(nodist_dutch_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_dutch_DATA)'; test -n "$(dutchdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dutchdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dutchdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dutchdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dutchdir)" || exit $$?; \
	done

uninstall-nodist_dutchDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_dutch_DATA)'; test -n "$(dutchdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dutchdir)'; $(am__uninstall_files_from_dir)
install-nodist_englishDATA: $(nodist_english_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_english_DATA)'; test -n "$(englishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(englishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(englishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(englishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(englishdir)" || exit $$?; \
	done

uninstall-nodist_englishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_english_DATA)'; test -n "$(englishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(englishdir)'; $(am__uninstall_files_from_dir)
install-nodist_esperantoDATA: $(nodist_esperanto_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_esperanto_DATA)'; test -n "$(esperantodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(esperantodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(esperantodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(esperantodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(esperantodir)" || exit $$?; \
	done

uninstall-nodist_esperantoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_esperanto_DATA)'; test -n "$(esperantodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(esperantodir)'; $(am__uninstall_files_from_dir)
install-nodist_estonianDATA: $(nodist_estonian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_estonian_DATA)'; test -n "$(estoniandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(estoniandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(estoniandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(estoniandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(estoniandir)" || exit $$?; \
	done

uninstall-nodist_estonianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_estonian_DATA)'; test -n "$(estoniandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(estoniandir)'; $(am__uninstall_files_from_dir)
install-nodist_finnishDATA: $(nodist_finnish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_finnish_DATA)'; test -n "$(finnishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(finnishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(finnishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(finnishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(finnishdir)" || exit $$?; \
	done

uninstall-nodist_finnishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_finnish_DATA)'; test -n "$(finnishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(finnishdir)'; $(am__uninstall_files_from_dir)
install-nodist_frenchDATA: $(nodist_french_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_french_DATA)'; test -n "$(frenchdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(frenchdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(frenchdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(frenchdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(frenchdir)" || exit $$?; \
	done

uninstall-nodist_frenchDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_french_DATA)'; test -n "$(frenchdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(frenchdir)'; $(am__uninstall_files_from_dir)
install-nodist_generalDATA: $(nodist_general_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_general_DATA)'; test -n "$(generaldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(generaldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(generaldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(generaldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(generaldir)" || exit $$?; \
	done

uninstall-nodist_generalDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_general_DATA)'; test -n "$(generaldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(generaldir)'; $(am__uninstall_files_from_dir)
install-nodist_georgianDATA: $(nodist_georgian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_georgian_DATA)'; test -n "$(georgiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(georgiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(georgiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(georgiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(georgiandir)" || exit $$?; \
	done

uninstall-nodist_georgianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_georgian_DATA)'; test -n "$(georgiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(georgiandir)'; $(am__uninstall_files_from_dir)
install-nodist_germanDATA: $(nodist_german_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_german_DATA)'; test -n "$(germandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(germandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(germandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(germandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(germandir)" || exit $$?; \
	done

uninstall-nodist_germanDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_german_DATA)'; test -n "$(germandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(germandir)'; $(am__uninstall_files_from_dir)
install-nodist_greekDATA: $(nodist_greek_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_greek_DATA)'; test -n "$(greekdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(greekdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(greekdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(greekdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(greekdir)" || exit $$?; \
	done

uninstall-nodist_greekDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_greek_DATA)'; test -n "$(greekdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(greekdir)'; $(am__uninstall_files_from_dir)
install-nodist_gypsyDATA: $(nodist_gypsy_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_gypsy_DATA)'; test -n "$(gypsydir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(gypsydir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(gypsydir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gypsydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gypsydir)" || exit $$?; \
	done

uninstall-nodist_gypsyDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_gypsy_DATA)'; test -n "$(gypsydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(gypsydir)'; $(am__uninstall_files_from_dir)
install-nodist_hausaDATA: $(nodist_hausa_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_hausa_DATA)'; test -n "$(hausadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hausadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hausadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hausadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hausadir)" || exit $$?; \
	done

uninstall-nodist_hausaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_hausa_DATA)'; test -n "$(hausadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hausadir)'; $(am__uninstall_files_from_dir)
install-nodist_hebrewDATA: $(nodist_hebrew_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_hebrew_DATA)'; test -n "$(hebrewdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hebrewdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hebrewdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hebrewdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hebrewdir)" || exit $$?; \
	done

uninstall-nodist_hebrewDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_hebrew_DATA)'; test -n "$(hebrewdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hebrewdir)'; $(am__uninstall_files_from_dir)
install-nodist_hungarianDATA: $(nodist_hungarian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_hungarian_DATA)'; test -n "$(hungariandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hungariandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hungariandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hungariandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hungariandir)" || exit $$?; \
	done

uninstall-nodist_hungarianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_hungarian_DATA)'; test -n "$(hungariandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hungariandir)'; $(am__uninstall_files_from_dir)
install-nodist_icelandicDATA: $(nodist_icelandic_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_icelandic_DATA)'; test -n "$(icelandicdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(icelandicdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(icelandicdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(icelandicdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(icelandicdir)" || exit $$?; \
	done

uninstall-nodist_icelandicDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_icelandic_DATA)'; test -n "$(icelandicdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(icelandicdir)'; $(am__uninstall_files_from_dir)
install-nodist_italianDATA: $(nodist_italian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_italian_DATA)'; test -n "$(italiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(italiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(italiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(italiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(italiandir)" || exit $$?; \
	done

uninstall-nodist_italianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_italian_DATA)'; test -n "$(italiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(italiandir)'; $(am__uninstall_files_from_dir)
install-nodist_klingonDATA: $(nodist_klingon_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_klingon_DATA)'; test -n "$(klingondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(klingondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(klingondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(klingondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(klingondir)" || exit $$?; \
	done

uninstall-nodist_klingonDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_klingon_DATA)'; test -n "$(klingondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(klingondir)'; $(am__uninstall_files_from_dir)
install-nodist_kurdishDATA: $(nodist_kurdish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_kurdish_DATA)'; test -n "$(kurdishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kurdishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kurdishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(kurdishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(kurdishdir)" || exit $$?; \
	done

uninstall-nodist_kurdishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_kurdish_DATA)'; test -n "$(kurdishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(kurdishdir)'; $(am__uninstall_files_from_dir)
install-nodist_latinDATA: $(nodist_latin_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_latin_DATA)'; test -n "$(latindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(latindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(latindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(latindir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(latindir)" || exit $$?; \
	done

uninstall-nodist_latinDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_latin_DATA)'; test -n "$(latindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(latindir)'; $(am__uninstall_files_from_dir)
install-nodist_latvianDATA: $(nodist_latvian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_latvian_DATA)'; test -n "$(latviandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(latviandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(latviandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(latviandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(latviandir)" || exit $$?; \
	done

uninstall-nodist_latvianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_latvian_DATA)'; test -n "$(latviandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(latviandir)'; $(am__uninstall_files_from_dir)
install-nodist_lithuanianDATA: $(nodist_lithuanian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_lithuanian_DATA)'; test -n "$(lithuaniandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(lithuaniandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(lithuaniandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(lithuaniandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(lithuaniandir)" || exit $$?; \
	done

uninstall-nodist_lithuanianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_lithuanian_DATA)'; test -n "$(lithuaniandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(lithuaniandir)'; $(am__uninstall_files_from_dir)
install-nodist_lower_sorbianDATA: $(nodist_lower_sorbian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_lower_sorbian_DATA)'; test -n "$(lower_sorbiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(lower_sorbiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(lower_sorbiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(lower_sorbiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(lower_sorbiandir)" || exit $$?; \
	done

uninstall-nodist_lower_sorbianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_lower_sorbian_DATA)'; test -n "$(lower_sorbiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(lower_sorbiandir)'; $(am__uninstall_files_from_dir)
install-nodist_macedonianDATA: $(nodist_macedonian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_macedonian_DATA)'; test -n "$(macedoniandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(macedoniandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(macedoniandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(macedoniandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(macedoniandir)" || exit $$?; \
	done

uninstall-nodist_macedonianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_macedonian_DATA)'; test -n "$(macedoniandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(macedoniandir)'; $(am__uninstall_files_from_dir)
install-nodist_mongolianDATA: $(nodist_mongolian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_mongolian_DATA)'; test -n "$(mongoliandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(mongoliandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(mongoliandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(mongoliandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(mongoliandir)" || exit $$?; \
	done

uninstall-nodist_mongolianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_mongolian_DATA)'; test -n "$(mongoliandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(mongoliandir)'; $(am__uninstall_files_from_dir)
install-nodist_norwegianDATA: $(nodist_norwegian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_norwegian_DATA)'; test -n "$(norwegiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(norwegiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(norwegiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(norwegiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(norwegiandir)" || exit $$?; \
	done

uninstall-nodist_norwegianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_norwegian_DATA)'; test -n "$(norwegiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(norwegiandir)'; $(am__uninstall_files_from_dir)
install-nodist_persianDATA: $(nodist_persian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_persian_DATA)'; test -n "$(persiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(persiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(persiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(persiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(persiandir)" || exit $$?; \
	done

uninstall-nodist_persianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_persian_DATA)'; test -n "$(persiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(persiandir)'; $(am__uninstall_files_from_dir)
install-nodist_polishDATA: $(nodist_polish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_polish_DATA)'; test -n "$(polishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(polishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(polishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(polishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(polishdir)" || exit $$?; \
	done

uninstall-nodist_polishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_polish_DATA)'; test -n "$(polishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(polishdir)'; $(am__uninstall_files_from_dir)
install-nodist_portugueseDATA: $(nodist_portuguese_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_portuguese_DATA)'; test -n "$(portuguesedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(portuguesedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(portuguesedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(portuguesedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(portuguesedir)" || exit $$?; \
	done

uninstall-nodist_portugueseDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_portuguese_DATA)'; test -n "$(portuguesedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(portuguesedir)'; $(am__uninstall_files_from_dir)
install-nodist_romanianDATA: $(nodist_romanian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_romanian_DATA)'; test -n "$(romaniandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(romaniandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(romaniandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(romaniandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(romaniandir)" || exit $$?; \
	done

uninstall-nodist_romanianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_romanian_DATA)'; test -n "$(romaniandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(romaniandir)'; $(am__uninstall_files_from_dir)
install-nodist_russianDATA: $(nodist_russian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_russian_DATA)'; test -n "$(russiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(russiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(russiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(russiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(russiandir)" || exit $$?; \
	done

uninstall-nodist_russianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_russian_DATA)'; test -n "$(russiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(russiandir)'; $(am__uninstall_files_from_dir)
install-nodist_serbianDATA: $(nodist_serbian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_serbian_DATA)'; test -n "$(serbiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(serbiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(serbiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(serbiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(serbiandir)" || exit $$?; \
	done

uninstall-nodist_serbianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_serbian_DATA)'; test -n "$(serbiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(serbiandir)'; $(am__uninstall_files_from_dir)
install-nodist_slovakDATA: $(nodist_slovak_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_slovak_DATA)'; test -n "$(slovakdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(slovakdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(slovakdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(slovakdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(slovakdir)" || exit $$?; \
	done

uninstall-nodist_slovakDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_slovak_DATA)'; test -n "$(slovakdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(slovakdir)'; $(am__uninstall_files_from_dir)
install-nodist_slovenianDATA: $(nodist_slovenian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_slovenian_DATA)'; test -n "$(sloveniandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sloveniandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sloveniandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sloveniandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sloveniandir)" || exit $$?; \
	done

uninstall-nodist_slovenianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_slovenian_DATA)'; test -n "$(sloveniandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sloveniandir)'; $(am__uninstall_files_from_dir)
install-nodist_spanishDATA: $(nodist_spanish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_spanish_DATA)'; test -n "$(spanishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(spanishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(spanishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(spanishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(spanishdir)" || exit $$?; \
	done

uninstall-nodist_spanishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_spanish_DATA)'; test -n "$(spanishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(spanishdir)'; $(am__uninstall_files_from_dir)
install-nodist_swedishDATA: $(nodist_swedish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_swedish_DATA)'; test -n "$(swedishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(swedishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(swedishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(swedishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(swedishdir)" || exit $$?; \
	done

uninstall-nodist_swedishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_swedish_DATA)'; test -n "$(swedishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(swedishdir)'; $(am__uninstall_files_from_dir)
install-nodist_turkishDATA: $(nodist_turkish_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_turkish_DATA)'; test -n "$(turkishdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(turkishdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(turkishdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(turkishdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(turkishdir)" || exit $$?; \
	done

uninstall-nodist_turkishDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_turkish_DATA)'; test -n "$(turkishdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(turkishdir)'; $(am__uninstall_files_from_dir)
install-nodist_ukrainianDATA: $(nodist_ukrainian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_ukrainian_DATA)'; test -n "$(ukrainiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ukrainiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ukrainiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ukrainiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ukrainiandir)" || exit $$?; \
	done

uninstall-nodist_ukrainianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_ukrainian_DATA)'; test -n "$(ukrainiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ukrainiandir)'; $(am__uninstall_files_from_dir)
install-nodist_upper_sorbianDATA: $(nodist_upper_sorbian_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_upper_sorbian_DATA)'; test -n "$(upper_sorbiandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(upper_sorbiandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(upper_sorbiandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(upper_sorbiandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(upper_sorbiandir)" || exit $$?; \
	done

uninstall-nodist_upper_sorbianDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_upper_sorbian_DATA)'; test -n "$(upper_sorbiandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(upper_sorbiandir)'; $(am__uninstall_files_from_dir)
install-nodist_vietnameseDATA: $(nodist_vietnamese_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_vietnamese_DATA)'; test -n "$(vietnamesedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vietnamesedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vietnamesedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vietnamesedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vietnamesedir)" || exit $$?; \
	done

uninstall-nodist_vietnameseDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_vietnamese_DATA)'; test -n "$(vietnamesedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vietnamesedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(RECURSIVE_TARGETS) $(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done
cscopelist-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) cscopelist); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist: cscopelist-recursive $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(docdir)" "$(DESTDIR)$(albaniandir)" "$(DESTDIR)$(belarusiandir)" "$(DESTDIR)$(bulgariandir)" "$(DESTDIR)$(croatiandir)" "$(DESTDIR)$(czechdir)" "$(DESTDIR)$(danishdir)" "$(DESTDIR)$(dutchdir)" "$(DESTDIR)$(englishdir)" "$(DESTDIR)$(esperantodir)" "$(DESTDIR)$(estoniandir)" "$(DESTDIR)$(finnishdir)" "$(DESTDIR)$(frenchdir)" "$(DESTDIR)$(generaldir)" "$(DESTDIR)$(georgiandir)" "$(DESTDIR)$(germandir)" "$(DESTDIR)$(greekdir)" "$(DESTDIR)$(gypsydir)" "$(DESTDIR)$(hausadir)" "$(DESTDIR)$(hebrewdir)" "$(DESTDIR)$(hungariandir)" "$(DESTDIR)$(icelandicdir)" "$(DESTDIR)$(italiandir)" "$(DESTDIR)$(klingondir)" "$(DESTDIR)$(kurdishdir)" "$(DESTDIR)$(latindir)" "$(DESTDIR)$(latviandir)" "$(DESTDIR)$(lithuaniandir)" "$(DESTDIR)$(lower_sorbiandir)" "$(DESTDIR)$(macedoniandir)" "$(DESTDIR)$(mongoliandir)" "$(DESTDIR)$(norwegiandir)" "$(DESTDIR)$(persiandir)" "$(DESTDIR)$(polishdir)" "$(DESTDIR)$(portuguesedir)" "$(DESTDIR)$(romaniandir)" "$(DESTDIR)$(russiandir)" "$(DESTDIR)$(serbiandir)" "$(DESTDIR)$(slovakdir)" "$(DESTDIR)$(sloveniandir)" "$(DESTDIR)$(spanishdir)" "$(DESTDIR)$(swedishdir)" "$(DESTDIR)$(turkishdir)" "$(DESTDIR)$(ukrainiandir)" "$(DESTDIR)$(upper_sorbiandir)" "$(DESTDIR)$(vietnamesedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-docDATA install-nodist_albanianDATA \
	install-nodist_belarusianDATA install-nodist_bulgarianDATA \
	install-nodist_croatianDATA install-nodist_czechDATA \
	install-nodist_danishDATA install-nodist_dutchDATA \
	install-nodist_englishDATA install-nodist_esperantoDATA \
	install-nodist_estonianDATA install-nodist_finnishDATA \
	install-nodist_frenchDATA install-nodist_generalDATA \
	install-nodist_georgianDATA install-nodist_germanDATA \
	install-nodist_greekDATA install-nodist_gypsyDATA \
	install-nodist_hausaDATA install-nodist_hebrewDATA \
	install-nodist_hungarianDATA install-nodist_icelandicDATA \
	install-nodist_italianDATA install-nodist_klingonDATA \
	install-nodist_kurdishDATA install-nodist_latinDATA \
	install-nodist_latvianDATA install-nodist_lithuanianDATA \
	install-nodist_lower_sorbianDATA install-nodist_macedonianDATA \
	install-nodist_mongolianDATA install-nodist_norwegianDATA \
	install-nodist_persianDATA install-nodist_polishDATA \
	install-nodist_portugueseDATA install-nodist_romanianDATA \
	install-nodist_russianDATA install-nodist_serbianDATA \
	install-nodist_slovakDATA install-nodist_slovenianDATA \
	install-nodist_spanishDATA install-nodist_swedishDATA \
	install-nodist_turkishDATA install-nodist_ukrainianDATA \
	install-nodist_upper_sorbianDATA install-nodist_vietnameseDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-docDATA uninstall-nodist_albanianDATA \
	uninstall-nodist_belarusianDATA uninstall-nodist_bulgarianDATA \
	uninstall-nodist_croatianDATA uninstall-nodist_czechDATA \
	uninstall-nodist_danishDATA uninstall-nodist_dutchDATA \
	uninstall-nodist_englishDATA uninstall-nodist_esperantoDATA \
	uninstall-nodist_estonianDATA uninstall-nodist_finnishDATA \
	uninstall-nodist_frenchDATA uninstall-nodist_generalDATA \
	uninstall-nodist_georgianDATA uninstall-nodist_germanDATA \
	uninstall-nodist_greekDATA uninstall-nodist_gypsyDATA \
	uninstall-nodist_hausaDATA uninstall-nodist_hebrewDATA \
	uninstall-nodist_hungarianDATA uninstall-nodist_icelandicDATA \
	uninstall-nodist_italianDATA uninstall-nodist_klingonDATA \
	uninstall-nodist_kurdishDATA uninstall-nodist_latinDATA \
	uninstall-nodist_latvianDATA uninstall-nodist_lithuanianDATA \
	uninstall-nodist_lower_sorbianDATA \
	uninstall-nodist_macedonianDATA uninstall-nodist_mongolianDATA \
	uninstall-nodist_norwegianDATA uninstall-nodist_persianDATA \
	uninstall-nodist_polishDATA uninstall-nodist_portugueseDATA \
	uninstall-nodist_romanianDATA uninstall-nodist_russianDATA \
	uninstall-nodist_serbianDATA uninstall-nodist_slovakDATA \
	uninstall-nodist_slovenianDATA uninstall-nodist_spanishDATA \
	uninstall-nodist_swedishDATA uninstall-nodist_turkishDATA \
	uninstall-nodist_ukrainianDATA \
	uninstall-nodist_upper_sorbianDATA \
	uninstall-nodist_vietnameseDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) \
	cscopelist-recursive ctags-recursive install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic cscopelist \
	cscopelist-recursive ctags ctags-recursive distclean \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-docDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man \
	install-nodist_albanianDATA install-nodist_belarusianDATA \
	install-nodist_bulgarianDATA install-nodist_croatianDATA \
	install-nodist_czechDATA install-nodist_danishDATA \
	install-nodist_dutchDATA install-nodist_englishDATA \
	install-nodist_esperantoDATA install-nodist_estonianDATA \
	install-nodist_finnishDATA install-nodist_frenchDATA \
	install-nodist_generalDATA install-nodist_georgianDATA \
	install-nodist_germanDATA install-nodist_greekDATA \
	install-nodist_gypsyDATA install-nodist_hausaDATA \
	install-nodist_hebrewDATA install-nodist_hungarianDATA \
	install-nodist_icelandicDATA install-nodist_italianDATA \
	install-nodist_klingonDATA install-nodist_kurdishDATA \
	install-nodist_latinDATA install-nodist_latvianDATA \
	install-nodist_lithuanianDATA install-nodist_lower_sorbianDATA \
	install-nodist_macedonianDATA install-nodist_mongolianDATA \
	install-nodist_norwegianDATA install-nodist_persianDATA \
	install-nodist_polishDATA install-nodist_portugueseDATA \
	install-nodist_romanianDATA install-nodist_russianDATA \
	install-nodist_serbianDATA install-nodist_slovakDATA \
	install-nodist_slovenianDATA install-nodist_spanishDATA \
	install-nodist_swedishDATA install-nodist_turkishDATA \
	install-nodist_ukrainianDATA install-nodist_upper_sorbianDATA \
	install-nodist_vietnameseDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-docDATA uninstall-nodist_albanianDATA \
	uninstall-nodist_belarusianDATA uninstall-nodist_bulgarianDATA \
	uninstall-nodist_croatianDATA uninstall-nodist_czechDATA \
	uninstall-nodist_danishDATA uninstall-nodist_dutchDATA \
	uninstall-nodist_englishDATA uninstall-nodist_esperantoDATA \
	uninstall-nodist_estonianDATA uninstall-nodist_finnishDATA \
	uninstall-nodist_frenchDATA uninstall-nodist_generalDATA \
	uninstall-nodist_georgianDATA uninstall-nodist_germanDATA \
	uninstall-nodist_greekDATA uninstall-nodist_gypsyDATA \
	uninstall-nodist_hausaDATA uninstall-nodist_hebrewDATA \
	uninstall-nodist_hungarianDATA uninstall-nodist_icelandicDATA \
	uninstall-nodist_italianDATA uninstall-nodist_klingonDATA \
	uninstall-nodist_kurdishDATA uninstall-nodist_latinDATA \
	uninstall-nodist_latvianDATA uninstall-nodist_lithuanianDATA \
	uninstall-nodist_lower_sorbianDATA \
	uninstall-nodist_macedonianDATA uninstall-nodist_mongolianDATA \
	uninstall-nodist_norwegianDATA uninstall-nodist_persianDATA \
	uninstall-nodist_polishDATA uninstall-nodist_portugueseDATA \
	uninstall-nodist_romanianDATA uninstall-nodist_russianDATA \
	uninstall-nodist_serbianDATA uninstall-nodist_slovakDATA \
	uninstall-nodist_slovenianDATA uninstall-nodist_spanishDATA \
	uninstall-nodist_swedishDATA uninstall-nodist_turkishDATA \
	uninstall-nodist_ukrainianDATA \
	uninstall-nodist_upper_sorbianDATA \
	uninstall-nodist_vietnameseDATA


%utf8.pl : %utf8.pl.in
	sed -e 's/@.{\([^}]*\)}/\1/g;' <$< >$@

%latin1.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO8859-1 >$@

%cp850.pl : %utf8.pl.in
	sed -e 's/@.{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)CP850 >$@

romanian/latin2.pl : romanian/utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' -f $(srcdir)/rom-comma-kludge.sed <$< | \
	$(CONVERT_FROM_UTF8)ISO8859-2 >$@

%latin2.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO8859-2 >$@

%latin3.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO8859-3 >$@

%latin4.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO8859-4 >$@

%iso88595.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO-8859-5 >$@

%iso88597.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO-8859-7 >$@

%iso88598.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO-8859-8 >$@

%latin5.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO-8859-9 >$@

%latin9.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;s/@9{\([^}]*\)}/\1/g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO-8859-15 >$@

romanian/cp1250.pl : romanian/utf8.pl
	sed -e 's/@u{\([^}]*\)}//g;' -f $(srcdir)/rom-comma-kludge.sed <$< | \
	$(CONVERT_FROM_UTF8)CP1250 >$@

%cp1250.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)CP1250 >$@

%cp1251.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)CP1251 >$@

%cp1252.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;s/@9{\([^}]*\)}/\1/g;' <$< | \
	$(CONVERT_FROM_UTF8)CP1252 >$@

%isoir111.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)ISO-IR-111 >$@

%koi8-r.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)KOI8-R >$@

%koi8-u.pl : %utf8.pl.in
	sed -e 's/@u{\([^}]*\)}//g;' <$< | \
	$(CONVERT_FROM_UTF8)KOI8-U >$@

# %tex.pl : %utf8.pl utf8-to-tex.sed
#	sed -f $(srcdir)/utf8-to-tex.sed <$< >$@

%-lang.xdy : %-test.xdy
	sed -n '1,10 p' <$< >$@

# Running "$(PERL) -I$(srcdir) $< $*" creates %-test.xdy, %-doc.tex, %.raw,
# and %.xdy; %-test.xdy is finished first.  We must not run this command
# several times simultaneously (for details see Automake manual 27.9).
%-test.xdy : %.pl
	$(PERL) -I$(srcdir) $< $*

%-doc.tex %.xdy : %-test.xdy
	@if test -f $@; then :; else \
	  trap 'rm -rf $*.lock $<' 1 2 13 15; \
	  if mkdir $*.lock 2>/dev/null; then \
	    rm -f $<; \
	    $(MAKE) $(AM_MAKEFLAGS) $<; \
	    result=$$?; rm -rf $*.lock; exit $$result; \
	  else \
	    while test -d $*.lock; do sleep 1; done; \
	    test -f $<; \
	  fi; \
	fi

alphabets-inc.tex : $(DOCS)
	$(RM) $@
	echo "\chapter{Latin scripts}" >>$@
	echo "\ienc{cp1252}" >>$@
	echo "\section{Codepage 1252}" >>$@
	for i in $(DOCS_CP1252); do echo "\input{$$i}" >>$@; done
	echo "\ienc{latin1}" >>$@
	echo "\section{Codepage latin1}" >>$@
	for i in $(DOCS_LATIN1); do echo "\input{$$i}" >>$@; done
	echo "\ienc{cp850}" >>$@
	echo "\section{Codepage 850}" >>$@
	for i in $(DOCS_CP850); do echo "\input{$$i}" >>$@; done
	echo "\ienc{latin2}" >>$@
	echo "\section{Codepage latin2}" >>$@
	for i in $(DOCS_LATIN2); do echo "\input{$$i}" >>$@; done
	echo "\ienc{cp1250}" >>$@
	echo "\section{Codepage 1250}" >>$@
	for i in $(DOCS_CP1250); do echo "\input{$$i}" >>$@; done
	echo "\ienc{latin3}" >>$@
	echo "\section{Codepage latin3}" >>$@
	for i in $(DOCS_LATIN3); do echo "\input{$$i}" >>$@; done
	echo "\ienc{latin4}" >>$@
	echo "\section{Codepage latin4}" >>$@
	for i in $(DOCS_LATIN4); do echo "\input{$$i}" >>$@; done
	echo "\ienc{latin5}" >>$@
	echo "\section{Codepage latin5}" >>$@
	for i in $(DOCS_LATIN5); do echo "\input{$$i}" >>$@; done
	echo "\ienc{latin9}" >>$@
	echo "\section{Codepage latin9}" >>$@
	for i in $(DOCS_LATIN9); do echo "\input{$$i}" >>$@; done
	echo "\ienc{cp1251}" >>$@
	echo "\fenc{T2A}" >>$@
	echo "\chapter{Cyrillic scripts}" >>$@
	echo "\section{Codepage 1251}" >>$@
	for i in $(DOCS_CYR_1251); do echo "\input{$$i}" >>$@; done
#	echo "\ienc{iso-8859-7}" >>$@
#	echo "\fenc{LGR}" >>$@
#	echo "\chapter{Other scripts}" >>$@
#	for i in $(DOCS_OTHER); do echo "\input{$$i}" >>$@; done
#	FIXME: UTF8 encoding
#	echo "\section{UTF-8 scripts}" >>$@
#	for i in $(DOCS_UTF8); do echo "\input{$$i}" >>$@; done
#	echo "\ienc{utf8}" >>$@

# whether to build docs

@BUILDDOCS_TRUE@@BUILDRULES_TRUE@alphabets-doc.pdf : alphabets-doc.tex alphabets-inc.tex
@BUILDDOCS_TRUE@@BUILDRULES_TRUE@	pdflatex -interaction batchmode $(srcdir)/alphabets-doc.tex
@BUILDDOCS_TRUE@@BUILDRULES_TRUE@	pdflatex -interaction batchmode $(srcdir)/alphabets-doc.tex

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
