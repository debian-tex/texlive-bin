From 87bd510f8b8acff7096159423f87251d82288700 Mon Sep 17 00:00:00 2001
From: liaoyonglin <liaoyonglin@uniontech.com>
Date: Tue, 16 Jan 2024 11:18:29 +0800
Subject: CVE-2024-25262 add a conditional statement to avoid fread size too big to
 coredump

A heap buffer overflow was found via the function ttfLoadHDMX:ttfdump.
This vulnerability allows attackers to cause a Denial of Service (DoS)
via supplying a crafted TTF file.

origin: https://patch-diff.githubusercontent.com/raw/TeX-Live/texlive-source/pull/63.patch
bug: https://tug.org/svn/texlive/trunk/Build/source/texk/ttfdump/ChangeLog?revision=69605&view=co
bug-ubuntu: https://bugs.launchpad.net/ubuntu/+source/texlive-bin/+bug/2047912
bug-debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1064517
Signed-off-by: attackoncs <2710651793@qq.com>
---
 texk/ttfdump/libttf/hdmx.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

Index: texlive-bin-2022.20220321.62855/texk/ttfdump/libttf/hdmx.c
===================================================================
--- texlive-bin-2022.20220321.62855.orig/texk/ttfdump/libttf/hdmx.c
+++ texlive-bin-2022.20220321.62855/texk/ttfdump/libttf/hdmx.c
@@ -44,7 +44,11 @@ static void ttfLoadHDMX (FILE *fp,HDMXPt
 	    hdmx->Records[i].PixelSize = ttfGetBYTE(fp);
 	    hdmx->Records[i].MaxWidth = ttfGetBYTE(fp);
 	    hdmx->Records[i].Width = XCALLOC (hdmx->size, BYTE);
-	    fread ((hdmx->Records+i)->Width, sizeof(BYTE), hdmx->numGlyphs+1,fp);
+            //if hdmx->numGlyphs+1 > hdmx->size,it will coredump,so we read min(hdmx->numGlyphs+1,hdmx->size) and truncate the remainder.
+	    if (hdmx->numGlyphs+1 <= hdmx->size)
+	    	fread ((hdmx->Records+i)->Width, sizeof(BYTE), hdmx->numGlyphs+1,fp);
+            else
+		fread ((hdmx->Records+i)->Width, sizeof(BYTE), hdmx->size,fp);
 	}
 }
 
