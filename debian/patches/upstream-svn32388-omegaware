---
 texk/web2c/omegaware/ChangeLog         |   14 +++++++++++
 texk/web2c/omegaware/am/omegaware.am   |   25 ++++++++++++--------
 texk/web2c/omegaware/ofm2opl.ch        |   22 ++++-------------
 texk/web2c/omegaware/ofm2opl.up        |    5 ++++
 texk/web2c/omegaware/ofm2opl.web       |   25 ++++++++++++--------
 texk/web2c/omegaware/opl2ofm.up        |   41 +++++++++++++++++++++++++++++++++
 texk/web2c/omegaware/opl2ofm.web       |   39 ++++++++++++++++++-------------
 texk/web2c/omegaware/overbmp.test      |   33 ++++++++++++++++++++++++--
 texk/web2c/omegaware/ovf2ovp.up        |    2 -
 texk/web2c/omegaware/ovf2ovp.web       |    2 -
 texk/web2c/omegaware/ovp2ovf.up        |    8 +++---
 texk/web2c/omegaware/tests/inbmp.opl   |   16 ++++++++++++
 texk/web2c/omegaware/tests/inbmp0.opl  |   16 ------------
 texk/web2c/omegaware/tests/overbmp.opl |   22 +++++++++++++++++
 texk/web2c/omegaware/tests/overbmp.ovp |    2 -
 15 files changed, 194 insertions(+), 78 deletions(-)

--- texlive-bin.orig/texk/web2c/omegaware/am/omegaware.am
+++ texlive-bin/texk/web2c/omegaware/am/omegaware.am
@@ -47,20 +47,24 @@
 	@$(web2c) ofm2opl
 ofm2opl-web2c: ofm2opl.p $(web2c_depend)
 	@$(web2c) ofm2opl
-EXTRA_DIST += $(ofm2opl_sources)
-ofm2opl_sources = omegaware/ofm2opl.web omegaware/ofm2opl.ch
-ofm2opl.p: tangle$(EXEEXT) $(ofm2opl_sources)
-	$(tangle_silent)$(ow_tangle) ofm2opl ofm2opl
+ofm2opl.p: tangle$(EXEEXT) ofm2opl.web omegaware/ofm2opl.ch
+	$(tangle_silent)$(ow_otangle) ofm2opl ofm2opl
+ofm2opl.web: tie$(EXEEXT) omegaware/ofm2opl.web omegaware/ofm2opl.up
+	$(tie) -m ofm2opl.web omegaware/ofm2opl.web omegaware/ofm2opl.up
+EXTRA_DIST += omegaware/ofm2opl.web omegaware/ofm2opl.up omegaware/ofm2opl.ch
+DISTCLEANFILES += ofm2opl.web
 
 nodist_opl2ofm_SOURCES = opl2ofm.c opl2ofm.h
 opl2ofm.c opl2ofm.h: opl2ofm-web2c
 	@$(web2c) opl2ofm
 opl2ofm-web2c: opl2ofm.p $(web2c_depend)
 	@$(web2c) opl2ofm
-EXTRA_DIST += $(opl2ofm_sources)
-opl2ofm_sources = omegaware/opl2ofm.web omegaware/opl2ofm.ch
-opl2ofm.p: tangle$(EXEEXT) $(opl2ofm_sources)
-	$(tangle_silent)$(ow_tangle) opl2ofm opl2ofm
+opl2ofm.p: tangle$(EXEEXT) opl2ofm.web omegaware/opl2ofm.ch
+	$(tangle_silent)$(ow_otangle) opl2ofm opl2ofm
+opl2ofm.web: tie$(EXEEXT) omegaware/opl2ofm.web omegaware/opl2ofm.up
+	$(tie) -m opl2ofm.web omegaware/opl2ofm.web omegaware/opl2ofm.up
+EXTRA_DIST += omegaware/opl2ofm.web omegaware/opl2ofm.up omegaware/opl2ofm.ch
+DISTCLEANFILES += opl2ofm.web
 
 nodist_otangle_SOURCES = otangle.c otangle.h
 otangle.c otangle.h: otangle-web2c
@@ -147,8 +151,9 @@
 	omegaware/tests/OCherokee.opl omegaware/tests/OCherokee.ovf \
 	omegaware/tests/xCherokee.* omegaware/tests/xOCherokee.*
 ## omegaware/overbmp.test
-EXTRA_DIST += omegaware/tests/inbmp0.opl omegaware/tests/overbmp.ovp
-DISTCLEANFILES += omegaware/tests/inbmp1.* omegaware/tests/xoverbmp.*
+EXTRA_DIST += omegaware/tests/inbmp.opl omegaware/tests/overbmp.opl \
+	omegaware/tests/overbmp.ovp
+DISTCLEANFILES += omegaware/tests/xinbmp* omegaware/tests/xoverbmp*
 ## omegaware/otangle.test
 DISTCLEANFILES += ocftest.*
 ## omegaware/realnum.test
--- texlive-bin.orig/texk/web2c/omegaware/ofm2opl.ch
+++ texlive-bin/texk/web2c/omegaware/ofm2opl.ch
@@ -110,31 +110,21 @@
 end;
 @z
 
-@x [18,19] Make |tfm| be dynamically allocated, and rename `index'.
+@x [18] Make |tfm| be dynamically allocated, and rename `index'.
 @<Types...@>=
 @!byte=0..255; {unsigned eight-bit quantity}
-@!index=-1000..tfm_size; {address of a byte in |tfm|}
-@!char_type=0..65535;
-@!xchar_type=0..65536;
-@!xxchar_type=0..65537;
-@!xxxchar_type=0..65538;
-
-@
-@<Glob...@>=
-@!tfm:array [-1000..tfm_size] of byte; {the input data all goes here}
+@!index=0..tfm_size; {address of a byte in |tfm|}
 @y
 @d index == index_type
 
 @<Types...@>=
 @!byte=0..255; {unsigned eight-bit quantity}
 @!index=integer; {address of a byte in |tfm|}
-@!char_type=0..65535;
-@!xchar_type=0..65536;
-@!xxchar_type=0..65537;
-@!xxxchar_type=0..65538;
+@z
 
-@ CHECK OUT tfm array ranges.
-@<Glob...@>=
+@x [19] Make |tfm| dynamically allocated.
+@!tfm:array [-1000..tfm_size] of byte; {the input data all goes here}
+@y
 {Kludge here to define |tfm| as a macro which takes care of the negative
  lower bound.  We've defined |tfm| for the benefit of web2c above.}
 @=#define tfm (tfmfilearray + 1001);@>@\
--- texlive-bin.orig/texk/web2c/omegaware/ovf2ovp.up
+++ texlive-bin/texk/web2c/omegaware/ovf2ovp.up
@@ -1,4 +1,4 @@
-@x
+@x [4] Increase constants.
 @d char_max=@"FFFF
 @y
 @d char_max=@"10FFFF
--- texlive-bin.orig/texk/web2c/omegaware/ovp2ovf.up
+++ texlive-bin/texk/web2c/omegaware/ovp2ovf.up
@@ -19,24 +19,24 @@
 
 @p function get_byte:byte; {scans a one-byte property value}
 @y
-@d max_byte=@"FFFFFF
+@d max_byte=@"10FFFF
 
 @p function get_byte:integer; {scans a one-byte property value}
 @z
 @x [62]
     skip_error('This value shouldn''t exceed 65535');
 @y
-    skip_error('This value shouldn''t exceed 16777215');
+    skip_error('This value shouldn''t exceed 1114111');
 @z
 @x [63]
     skip_error('This value shouldn''t exceed ''177777');
 @y
-    skip_error('This value shouldn''t exceed ''77777777');
+    skip_error('This value shouldn''t exceed ''4177777');
 @z
 @x [64]
     skip_error('This value shouldn''t exceed "FFFF');
 @y
-    skip_error('This value shouldn''t exceed "FFFFFF');
+    skip_error('This value shouldn''t exceed "10FFFF');
 @z
 
 @x [152]
--- texlive-bin.orig/texk/web2c/omegaware/overbmp.test
+++ texlive-bin/texk/web2c/omegaware/overbmp.test
@@ -11,15 +11,42 @@
 OFMFONTS=./$tests
 export TEXMFCNF OFMFONTS
 
-./opl2ofm -verbose $srcdir/$tests/inbmp0 $tests/inbmp1 || exit 1
+./opl2ofm -verbose $srcdir/$tests/inbmp $tests/xinbmp || exit 1
 
-./ofm2opl -verbose inbmp1 $tests/inbmp1 || exit 1
+./ofm2opl -verbose xinbmp $tests/xinbmp || exit 1
 
-diff $srcdir/$tests/inbmp0.opl $tests/inbmp1.opl || exit 1
+diff $srcdir/$tests/inbmp.opl $tests/xinbmp.opl || exit 1
 
 ./ovp2ovf -verbose $srcdir/$tests/overbmp.ovp $tests/xoverbmp || exit 1
 
+./ofm2opl -verbose xoverbmp $tests/xoverbmp || exit 1
+
+diff $srcdir/$tests/overbmp.opl $tests/xoverbmp.opl || exit 1
+
 ./ovf2ovp -verbose $tests/xoverbmp xoverbmp $tests/xoverbmp.ovp || exit 1
 
 diff $srcdir/$tests/overbmp.ovp $tests/xoverbmp.ovp || exit 1
 
+sed -e '/OFMLEVEL/s/H 0/H 1/' $tests/xinbmp.opl >$tests/xinbmp1.opl
+
+./opl2ofm -verbose $tests/xinbmp1 $tests/xinbmp1 || exit 1
+
+./ofm2opl -verbose xinbmp1 $tests/xinbmp2 || exit 1
+
+diff $tests/xinbmp1.opl $tests/xinbmp1.opl || exit 1
+
+sed -e '/OFMLEVEL/s/H 1/H 0/' -e 's/xinbmp)/xinbmp1)/;s/xoverbmp)/xoverbmp1)/' \
+	$tests/xoverbmp.ovp >$tests/xoverbmp1.ovp
+
+./ovp2ovf -verbose $tests/xoverbmp1.ovp $tests/xoverbmp1 || exit 1
+
+sed -e '/OFMLEVEL/s/H 1/H 0/' $tests/xoverbmp.opl >$tests/xoverbmp1.opl
+
+./ofm2opl -verbose xoverbmp1 $tests/xoverbmp2 || exit 1
+
+diff $tests/xoverbmp1.opl $tests/xoverbmp2.opl || exit 1
+
+./ovf2ovp -verbose $tests/xoverbmp1 xoverbmp1 $tests/xoverbmp2 || exit 1
+
+diff $tests/xoverbmp1.ovp $tests/xoverbmp2.ovp || exit 1
+
--- texlive-bin.orig/texk/web2c/omegaware/opl2ofm.web
+++ texlive-bin/texk/web2c/omegaware/opl2ofm.web
@@ -114,6 +114,13 @@
 @ The following parameters can be changed at compile time to extend or
 reduce \.{PLtoTF}'s capacity.
 
+@d char_max=@"FFFF
+@d xchar_max=char_max+1
+@d xxchar_max=xchar_max+1
+@d mem_max=xxchar_max+xxchar_max+xxchar_max+xxchar_max
+@#
+@d width_max=@"FFFF
+
 @<Constants...@>=
 @!buf_size=60; {length of lines displayed in error messages}
 @!max_header_bytes=100; {four times the maximum number of words allowed in
@@ -121,18 +128,17 @@
 @!max_param_words=100; {the maximum number of \.{fontdimen} parameters allowed}
 @!max_lig_steps=800000;
   {maximum length of ligature program, must be at most $32767-257=32510$}
-@!xmax_label=800001;
+@!xmax_label=800001; {must be greater than |max_lig_steps|}
 @!max_kerns=50000; {the maximum number of distinct kern values}
 @!hash_size=130003; {preferably a prime number, a bit larger than the number
   of character pairs in lig/kern steps}
 @!hash_mult=16007; {another prime}
 @!lig_size=800000; {maximum length of |lig_kern| program, in words}
-@!max_char=65535; {the largest character number in a font}
-@!xmax_char=65536; {|max_char|+1}
-@!xxmax_char=65537;{|max_char|+2}
-@!xxxmax_char=65538;{|max_char|+3}
-@!mem_size=262148; {|max_char|*4+8}
-@!max_width=65535; {the largest character width number}
+@!max_char=char_max; {the largest character number in a font}
+@!xmax_char=xchar_max; {|max_char|+1}
+@!xxmax_char=xxchar_max;{|max_char|+2}
+@!mem_size=mem_max; {|max_char|*4+8}
+@!max_width=width_max; {the largest character width number}
 @!max_height=255; {the largest character height number}
 @!max_depth=255; {the largest character depth number}
 @!max_italic=255; {the largest character italic correction number}
@@ -1229,6 +1235,8 @@
 @ The first number scanner, which returns a one-byte value, surely has
 no problems of arithmetic overflow.
 
+@d max_byte=@"FFFF
+
 @p function get_byte:byte; {scans a one-byte property value}
 var acc:integer; {an accumulator}
 @!t:ASCII_code; {the type of value to be scanned}
@@ -1260,7 +1268,7 @@
 @ @<Scan a small dec...@>=
 begin while (cur_char>="0")and(cur_char<="9") do begin
   acc:=acc*10+cur_char-"0";
-  if acc>65535 then begin
+  if acc>max_byte then begin
     skip_error('This value shouldn''t exceed 65535');
 @.This value shouldn't...@>
     acc:=0; cur_char:=" ";
@@ -1273,7 +1281,7 @@
 @ @<Scan a small oct...@>=
 begin while (cur_char>="0")and(cur_char<="7") do
   begin acc:=acc*8+cur_char-"0";
-  if acc>65535 then begin
+  if acc>max_byte then begin
     skip_error('This value shouldn''t exceed ''177777');
 @.This value shouldn't...@>
     acc:=0; cur_char:=" ";
@@ -1288,7 +1296,7 @@
    ((cur_char>="A")and(cur_char<="F")) do begin
   if cur_char>="A" then cur_char:=cur_char+"0"+10-"A";
   acc:=acc*16+cur_char-"0";
-  if acc>65535 then begin
+  if acc>max_byte then begin
     skip_error('This value shouldn''t exceed "FFFF');
 @.This value shouldn't...@>
     acc:=0; cur_char:=" ";
@@ -1505,7 +1513,6 @@
 @!char_type=0..max_char;
 @!xchar_type=0..xmax_char;
 @!xxchar_type=0..xxmax_char;
-@!xxxchar_type=0..xxxmax_char;
 @!header_index=0..max_header_bytes;
 @!indx=xxchar_type;
 
@@ -2820,9 +2827,9 @@
 and the total number of words in the \.{TFM} file (|lf|).
 
 @<Gl...@>=
-@!bc:byte; {the smallest character code in the font}
-@!ec:byte; {the largest character code in the font}
-@!lh:byte; {the number of words in the header block}
+@!bc:char_type; {the smallest character code in the font}
+@!ec:char_type; {the largest character code in the font}
+@!lh:char_type; {the number of words in the header block}
 @!lf:unsigned_integer; {the number of words in the entire \.{TFM} file}
 @!not_found:boolean; {has a font character been found?}
 @!temp_width:fix_word; {width being used to compute a check sum}
@@ -3088,10 +3095,10 @@
   end;
 
 @ One embarrassing problem remains: The ligature/kern program might be very
-long, but the starting addresses in |char_remainder| can be at most~255.
+long, but the starting addresses in |char_remainder| can be at most~65535.
 Therefore we need to output some indirect address information; we want to
 compute |lk_offset| so that addition of |lk_offset| to all remainders makes
-all but |lk_offset| distinct remainders less than~256.
+all but |lk_offset| distinct remainders less than~65535.
 
 For this we need a sorted table of all relevant remainders.
 
--- texlive-bin.orig/texk/web2c/omegaware/ofm2opl.web
+++ texlive-bin/texk/web2c/omegaware/ofm2opl.web
@@ -119,15 +119,20 @@
 @ The following parameters can be changed at compile time to extend or
 reduce \.{TFtoPL}'s capacity.
 
+@d char_max=@"FFFF
+@d xchar_max=char_max+1
+@d xxchar_max=xchar_max+1
+@d xxxchar_max=xxchar_max+1
+
 @<Constants...@>=
 @!tfm_size=2000000; {maximum length of |tfm| data, in bytes}
 @!lig_size=800000; {maximum length of |lig_kern| program, in words}
 @!hash_size=130003; {preferably a prime number, a bit larger than the number
   of character pairs in lig/kern steps}
 @!hash_mult=16007; {another prime}
-@!max_char=65535; {the largest character number in a font}
-@!xmax_char=65536; {|max_char|+1}
-@!xxmax_char=65537;{|max_char|+2}
+@!max_char=char_max; {the largest character number in a font}
+@!xmax_char=xchar_max; {|max_char|+1}
+@!xxmax_char=xxchar_max;{|max_char|+2}
 @!xmax_label=80001;{must be greater than |max_lig_steps|}
 
 @ Here are some macros for common programming idioms.
@@ -461,11 +466,11 @@
 
 @<Types...@>=
 @!byte=0..255; {unsigned eight-bit quantity}
-@!index=-1000..tfm_size; {address of a byte in |tfm|}
-@!char_type=0..65535;
-@!xchar_type=0..65536;
-@!xxchar_type=0..65537;
-@!xxxchar_type=0..65538;
+@!index=0..tfm_size; {address of a byte in |tfm|}
+@!char_type=0..char_max;
+@!xchar_type=0..xchar_max;
+@!xxchar_type=0..xxchar_max;
+@!xxxchar_type=0..xxxchar_max;
 
 @
 @<Glob...@>=
@@ -593,8 +598,8 @@
   eval_four_bytes(font_dir);
   nlw:=2*nl;
   neew:=2*ne;
-  top_char:=65535;
-  top_width:=65535;
+  top_char:=char_max;
+  top_width:=char_max;
   top_height:=255;
   top_depth:=255;
   top_italic:=255;
--- /dev/null
+++ texlive-bin/texk/web2c/omegaware/opl2ofm.up
@@ -0,0 +1,41 @@
+@x [3] Increase constants.
+@d char_max=@"FFFF
+@y
+@d char_max=@"10FFFF
+@z
+@x [3] Increase constants.
+@d width_max=@"FFFF
+@y
+@d width_max=@"10FFFF
+@z
+
+@x [51]
+@d max_byte=@"FFFF
+
+@p function get_byte:byte; {scans a one-byte property value}
+@y
+@d max_byte=@"10FFFF
+
+@p function get_byte:integer; {scans a one-byte property value}
+@z
+@x [53]
+    skip_error('This value shouldn''t exceed 65535');
+@y
+    skip_error('This value shouldn''t exceed 1114111');
+@z
+@x [54]
+    skip_error('This value shouldn''t exceed ''177777');
+@y
+    skip_error('This value shouldn''t exceed ''4177777');
+@z
+@x [55]
+    skip_error('This value shouldn''t exceed "FFFF');
+@y
+    skip_error('This value shouldn''t exceed "10FFFF');
+@z
+
+@x [159]
+      while (not diff) and (cprime<=ec) do begin
+@y
+      while (not diff) and (cprime<=ec) and (cprime-c<@"10000) do begin
+@z
--- /dev/null
+++ texlive-bin/texk/web2c/omegaware/ofm2opl.up
@@ -0,0 +1,5 @@
+@x [4] Increase constants.
+@d char_max=@"FFFF
+@y
+@d char_max=@"10FFFF
+@z
--- texlive-bin.orig/texk/web2c/omegaware/tests/inbmp0.opl
+++ /dev/null
@@ -1,16 +0,0 @@
-(OFMLEVEL H 0)
-(FONTDIR TL)
-(FAMILY UNSPECIFIED)
-(FACE F MRR)
-(CODINGSCHEME UNSPECIFIED)
-(DESIGNSIZE R 10.0)
-(COMMENT DESIGNSIZE IS IN POINTS)
-(COMMENT OTHER SIZES ARE MULTIPLES OF DESIGNSIZE)
-(CHECKSUM H AA6297E0)
-(SEVENBITSAFEFLAG FALSE)
-(CHARACTER H 4E00
-   (CHARWD R 1.0)
-   )
-(CHARACTER H 53F1
-   (CHARWD R 1.0)
-   )
--- /dev/null
+++ texlive-bin/texk/web2c/omegaware/tests/overbmp.opl
@@ -0,0 +1,22 @@
+(OFMLEVEL H 1)
+(FONTDIR TL)
+(FAMILY UNSPECIFIED)
+(FACE F MRR)
+(CODINGSCHEME UNSPECIFIED)
+(DESIGNSIZE R 10.0)
+(COMMENT DESIGNSIZE IS IN POINTS)
+(COMMENT OTHER SIZES ARE MULTIPLES OF DESIGNSIZE)
+(CHECKSUM H DD8C3992)
+(SEVENBITSAFEFLAG FALSE)
+(CHARACTER H 4E00
+   (CHARWD R 1.0)
+   )
+(CHARACTER H 53F1
+   (CHARWD R 1.0)
+   )
+(CHARACTER H 20B9F
+   (CHARWD R 1.0)
+   )
+(CHARACTER H 20BB7
+   (CHARWD R 1.0)
+   )
--- texlive-bin.orig/texk/web2c/omegaware/tests/overbmp.ovp
+++ texlive-bin/texk/web2c/omegaware/tests/overbmp.ovp
@@ -10,7 +10,7 @@
 (CHECKSUM H DD8C3992)
 (SEVENBITSAFEFLAG FALSE)
 (MAPFONT D 0
-   (FONTNAME inbmp1)
+   (FONTNAME xinbmp)
    (FONTCHECKSUM H AA6297E0)
    (FONTAT R 1.0)
    (FONTDSIZE R 10.0)
--- /dev/null
+++ texlive-bin/texk/web2c/omegaware/tests/inbmp.opl
@@ -0,0 +1,16 @@
+(OFMLEVEL H 0)
+(FONTDIR TL)
+(FAMILY UNSPECIFIED)
+(FACE F MRR)
+(CODINGSCHEME UNSPECIFIED)
+(DESIGNSIZE R 10.0)
+(COMMENT DESIGNSIZE IS IN POINTS)
+(COMMENT OTHER SIZES ARE MULTIPLES OF DESIGNSIZE)
+(CHECKSUM H AA6297E0)
+(SEVENBITSAFEFLAG FALSE)
+(CHARACTER H 4E00
+   (CHARWD R 1.0)
+   )
+(CHARACTER H 53F1
+   (CHARWD R 1.0)
+   )
--- texlive-bin.orig/texk/web2c/omegaware/ovf2ovp.web
+++ texlive-bin/texk/web2c/omegaware/ovf2ovp.web
@@ -1776,7 +1776,7 @@
 @!c:xchar_type; {a random character}
 @!d:0..3; {byte number in a word}
 @!k:index; {a random index}
-@!r:0..char_max; {a random two-byte value}
+@!r:0..65535; {a random two-byte value}
 @!count:0..127; {for when we need to enumerate a small set}
 
 @ There are a lot of simple things to do, and they have to be done one
--- texlive-bin.orig/texk/web2c/omegaware/ChangeLog
+++ texlive-bin/texk/web2c/omegaware/ChangeLog
@@ -1,3 +1,17 @@
+2013-12-10  Peter Breitenlohner  <peb@mppmu.mpg.de>
+
+	* ofm2ovf.web, ovf2ofm.web: Replace 65535 etc by numeric Web
+	macros (can be up to 2^{30} for otangle).
+	* ofm2opl.ch: Split one changset to enable  upTeX version.
+	* ofm2ovf.up, ovf2ofm.up (new): Changes for upTeX versions.
+	* ovp2ovf.up: Character codes are 0..0x10ffff.
+	* overbmp.test: More extensive tests.
+	* tests/inbmp0.opl (removed): Moved ...
+	* tests/inbmp.opl (new): ... to here.
+	* tests/overbmp.opl (new): Additional test data.
+	* tests/overbmp.ovp: Adapt to modified file names.
+	* am/omegaware.am: Adapted.
+
 2013-12-09  Peter Breitenlohner  <peb@mppmu.mpg.de>
 
 	* ovp2ovf.up: Ensure char_repeats[c]<=0xffff.
