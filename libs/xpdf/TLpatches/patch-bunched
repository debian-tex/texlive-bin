diff -ur xpdf-4.02/goo/gfile.cc xpdf-src/goo/gfile.cc
--- xpdf-4.02/goo/gfile.cc	Thu Sep 26 04:54:33 2019
+++ xpdf-src/goo/gfile.cc	Sun Sep 29 11:23:53 2019
@@ -7,6 +7,9 @@
 // Copyright 1996-2003 Glyph & Cog, LLC
 //
 //========================================================================
+//  Modified for TeX Live by Peter Breitenlohner <tex-live@tug.org>
+//  See top-level ChangeLog for a list of all modifications
+//========================================================================
 
 #include <aconf.h>
 
@@ -54,7 +57,11 @@
   char *s;
   GString *ret;
 
+#ifdef _WIN32
+  if ((s = getenv("USERPROFILE")))
+#else
   if ((s = getenv("HOME")))
+#endif
     ret = new GString(s);
   else
     ret = new GString(".");
@@ -403,6 +410,7 @@
 #endif
 }
 
+#ifndef PDF_PARSER_ONLY
 GBool openTempFile(GString **name, FILE **f,
 		   const char *mode, const char *ext) {
 #if defined(_WIN32)
@@ -517,10 +525,11 @@
   return gTrue;
 #endif
 }
+#endif /* !PDF_PARSER_ONLY */
 
 GBool createDir(char *path, int mode) {
 #ifdef _WIN32
-  return !mkdir(path);
+  return !_mkdir(path);
 #else
   return !mkdir(path, mode);
 #endif
@@ -574,6 +583,8 @@
 
 FILE *openFile(const char *path, const char *mode) {
 #if defined(_WIN32)
+  return fopen(path, mode);
+#if 0
   OSVERSIONINFO version;
   wchar_t wPath[_MAX_PATH + 1];
   char nPath[_MAX_PATH + 1];
@@ -630,6 +641,7 @@
     nPath[i] = '\0';
     return fopen(nPath, mode);
   }
+#endif /* 0 */
 #elif defined(VMS)
   return fopen(path, mode, "ctx=stm");
 #else
@@ -690,6 +702,7 @@
 #endif
 }
 
+#ifndef PDF_PARSER_ONLY
 void fixCommandLine(int *argc, char **argv[]) {
 #ifdef _WIN32
   int argcw;
@@ -715,3 +728,4 @@
   LocalFree(argvw);
 #endif
 }
+#endif /* !PDF_PARSER_ONLY */
diff -ur xpdf-4.02/goo/gfile.h xpdf-src/goo/gfile.h
--- xpdf-4.02/goo/gfile.h	Thu Sep 26 04:54:33 2019
+++ xpdf-src/goo/gfile.h	Sun Sep 29 11:25:19 2019
@@ -115,6 +115,8 @@
 
 // On Windows, this gets the Unicode command line and converts it to
 // UTF-8.  On other systems, this is a nop.
+#ifndef PDF_PARSER_ONLY
 extern void fixCommandLine(int *argc, char **argv[]);
+#endif /* !PDF_PARSER_ONLY */
 
 #endif
diff -ur xpdf-4.02/xpdf/GlobalParams.cc xpdf-src/xpdf/GlobalParams.cc
--- xpdf-4.02/xpdf/GlobalParams.cc	Thu Sep 26 04:54:33 2019
+++ xpdf-src/xpdf/GlobalParams.cc	Sun Sep 29 11:32:58 2019
@@ -5,6 +5,9 @@
 // Copyright 2001-2003 Glyph & Cog, LLC
 //
 //========================================================================
+//  Modified for TeX Live by Peter Breitenlohner <tex-live@tug.org>
+//  See top-level ChangeLog for a list of all modifications
+//========================================================================
 
 #include <aconf.h>
 
@@ -44,8 +47,12 @@
 #include "GlobalParams.h"
 
 #ifdef _WIN32
-#  define strcasecmp stricmp
-#  define strncasecmp strnicmp
+#  undef strcasecmp
+#  undef strncasecmp
+#  define strcasecmp _stricmp
+#  define strncasecmp _strnicmp
+#else
+#  include <strings.h>
 #endif
 
 #if MULTITHREADED
@@ -803,6 +810,7 @@
   f = NULL;
   fileName = NULL;
   if (cfgFileName && cfgFileName[0]) {
+#ifndef PDF_PARSER_ONLY
     fileName = new GString(cfgFileName);
     if (!(f = fopen(fileName->getCString(), "r"))) {
       delete fileName;
@@ -835,6 +843,7 @@
     parseFile(fileName, f);
     delete fileName;
     fclose(f);
+#endif /* !PDF_PARSER_ONLY */
   }
 }
 
@@ -2265,8 +2274,11 @@
 				   base14->fontNum,
 				   displayFontTab[i].obliqueFactor));
       } else {
+// Do not display unnecessary looking message on W32
+#ifndef _WIN32
 	error(errConfig, -1, "No display font for '{0:s}'",
 	      displayFontTab[i].name);
+#endif
       }
     }
   }
diff -ur xpdf-4.02/xpdf/GlobalParams.h xpdf-src/xpdf/GlobalParams.h
--- xpdf-4.02/xpdf/GlobalParams.h	Thu Sep 26 04:54:33 2019
+++ xpdf-src/xpdf/GlobalParams.h	Sun Sep 29 11:34:12 2019
@@ -5,6 +5,9 @@
 // Copyright 2001-2003 Glyph & Cog, LLC
 //
 //========================================================================
+//  Modified for TeX Live by Peter Breitenlohner <tex-live@tug.org>
+//  See top-level ChangeLog for a list of all modifications
+//========================================================================
 
 #ifndef GLOBALPARAMS_H
 #define GLOBALPARAMS_H
@@ -219,7 +222,7 @@
 
   // Initialize the global parameters by attempting to read a config
   // file.
-  GlobalParams(const char *cfgFileName);
+  GlobalParams(const char *cfgFileName = NULL);
 
   ~GlobalParams();
 
diff -ur xpdf-4.02/xpdf/PDFDoc.cc xpdf-src/xpdf/PDFDoc.cc
--- xpdf-4.02/xpdf/PDFDoc.cc	Thu Sep 26 04:54:33 2019
+++ xpdf-src/xpdf/PDFDoc.cc	Sun Sep 29 11:41:09 2019
@@ -156,20 +156,25 @@
 
 PDFDoc::PDFDoc(char *fileNameA, GString *ownerPassword,
 	       GString *userPassword, PDFCore *coreA) {
+/*
 #ifdef _WIN32
   OSVERSIONINFO version;
 #endif
+*/
   Object obj;
+/*
 #ifdef _WIN32
   Unicode u;
   int n, i, j;
 #endif
+*/
 
   init(coreA);
 
   fileName = new GString(fileNameA);
 
 #if defined(_WIN32)
+#if 0
   n = 0;
   i = 0;
   while (getUTF8(fileName, &i, &u)) {
@@ -187,8 +192,11 @@
   if (version.dwPlatformId == VER_PLATFORM_WIN32_NT) {
     file = _wfopen(fileNameU, wfopenReadMode);
   } else {
+#endif /* 0 */
     file = fopen(fileName->getCString(), fopenReadMode);
+#if 0
   }
+#endif /* 0 */
 #elif defined(VMS)
   file = fopen(fileName->getCString(), fopenReadMode, "ctx=stm");
 #else
@@ -581,6 +589,7 @@
   GBool ret;
 
   // NB: _wfopen is only available in NT
+/*
   version.dwOSVersionInfoSize = sizeof(version);
   GetVersionEx(&version);
   if (version.dwPlatformId == VER_PLATFORM_WIN32_NT) {
@@ -590,12 +599,15 @@
     path2w[i] = 0;
     f = _wfopen(path2w, L"wb");
   } else {
+*/
     for (i = 0; i < pathLen && i < _MAX_PATH; ++i) {
       path2c[i] = (char)path[i];
     }
     path2c[i] = 0;
     f = fopen(path2c, "wb");
+/*
   }
+*/
   if (!f) {
     return gFalse;
   }
diff -ur xpdf-4.02/xpdf/Page.cc xpdf-src/xpdf/Page.cc
--- xpdf-4.02/xpdf/Page.cc	Thu Sep 26 04:54:33 2019
+++ xpdf-src/xpdf/Page.cc	Sun Sep 29 11:43:12 2019
@@ -480,9 +480,9 @@
   delete links;
 }
 
-#ifndef PDF_PARSER_ONLY
 void Page::getDefaultCTM(double *ctm, double hDPI, double vDPI,
 			 int rotate, GBool useMediaBox, GBool upsideDown) {
+#ifndef PDF_PARSER_ONLY
   GfxState *state;
   int i;
 
@@ -499,5 +499,5 @@
     ctm[i] = state->getCTM()[i];
   }
   delete state;
-}
 #endif
+}
diff -ur xpdf-4.02/xpdf/XFAForm.cc xpdf-src/xpdf/XFAForm.cc
--- xpdf-4.02/xpdf/XFAForm.cc	Thu Sep 26 04:54:33 2019
+++ xpdf-src/xpdf/XFAForm.cc	Sun Sep 29 11:44:10 2019
@@ -29,8 +29,10 @@
 #include "XFAForm.h"
 
 #ifdef _WIN32
-#  define strcasecmp stricmp
-#  define strncasecmp strnicmp
+#  undef strcasecmp
+#  undef strncasecmp
+#  define strcasecmp _stricmp
+#  define strncasecmp _strnicmp
 #endif
 
 //------------------------------------------------------------------------
diff -ur xpdf-4.02/xpdf/config.h xpdf-src/xpdf/config.h
--- xpdf-4.02/xpdf/config.h	Thu Sep 26 04:54:33 2019
+++ xpdf-src/xpdf/config.h	Sun Sep 29 11:45:39 2019
@@ -78,11 +78,6 @@
 // popen
 //------------------------------------------------------------------------
 
-#if defined(_MSC_VER) || defined(__BORLANDC__)
-#define popen _popen
-#define pclose _pclose
-#endif
-
 #if defined(VMS) || defined(VMCMS) || defined(DOS) || defined(OS2) || defined(__EMX__) || defined(_WIN32) || defined(__DJGPP__)
 #define POPEN_READ_MODE "rb"
 #else
